{"ast":null,"code":"import React,{useEffect,useRef,useCallback}from'react';import L from'leaflet';import'leaflet/dist/leaflet.css';import'leaflet.markercluster';import'leaflet.markercluster/dist/MarkerCluster.css';import'leaflet.markercluster/dist/MarkerCluster.Default.css';import{styled}from'styled-components';// Fix for default icon\nimport{jsx as _jsx}from\"react/jsx-runtime\";delete L.Icon.Default.prototype._getIconUrl;L.Icon.Default.mergeOptions({iconRetinaUrl:require('leaflet/dist/images/marker-icon-2x.png'),iconUrl:require('leaflet/dist/images/marker-icon.png'),shadowUrl:require('leaflet/dist/images/marker-shadow.png')});const MapContainer=styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  will-change: transform;\n  transform: translateZ(0);\n  backface-visibility: hidden;\n  perspective: 1000px;\n\n  /* Дополнительные фиксы для iOS устройств */\n  @supports (-webkit-touch-callout: none) {\n    position: fixed !important;\n    top: 56px !important;\n    bottom: 0 !important;\n    left: 0 !important;\n    right: 0 !important;\n    width: 100% !important;\n    height: calc(100vh - 56px) !important;\n  }\n\n  /* Фикс для всех мобильных устройств */\n  @media (max-width: 768px) {\n    position: fixed !important;\n    top: 56px !important;\n    bottom: 0 !important;\n    left: 0 !important;\n    right: 0 !important;\n    width: 100% !important;\n    height: calc(100vh - 56px) !important;\n  }\n`;// Создаем стиль для контейнера контента на мобильных устройствах\nconst ContentContainer=styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  /* Дополнительные фиксы для iOS устройств */\n  @supports (-webkit-touch-callout: none) {\n    position: fixed !important;\n    top: 56px !important;\n    bottom: 0 !important;\n    left: 0 !important;\n    right: 0 !important;\n    width: 100% !important;\n    height: calc(100vh - 56px) !important;\n    overflow: hidden !important;\n  }\n\n  /* Фикс для всех мобильных устройств */\n  @media (max-width: 768px) {\n    position: fixed !important;\n    top: 56px !important;\n    bottom: 0 !important;\n    left: 0 !important;\n    right: 0 !important;\n    width: 100% !important;\n    height: calc(100vh - 56px) !important;\n    overflow: hidden !important;\n  }\n`;// Расширяем интерфейс MapOptions для поддержки дополнительных свойств\nconst createPopupContent=place=>`\n  <div class=\"place-card\">\n    <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" style=\"width: 100%; height: 200px; object-fit: cover;\" />\n    <div class=\"place-content\" style=\"padding: 15px;\">\n      <h3 style=\"margin: 0; font-size: 18px;\">${place.name}</h3>\n      <p style=\"margin: 10px 0; font-size: 14px;\">${place.description}</p>\n      <div class=\"place-links-social\" style=\"margin-top: 10px;\">\n        ${place.instagram?`<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" style=\"width: 27px; height: 27px;\" /></a>`:''}\n        ${place.maps_url?`<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" style=\"width: 27px; height: 27px;\" /></a>`:''}\n      </div>\n    </div>\n  </div>\n`;export const Map=_ref=>{let{places,config,onMarkerClick,selectedPlace,mapRef,onPopupClose,onBoundsChange}=_ref;const markersRef=useRef(null);const activeMarkerRef=useRef(null);const containerRef=useRef(null);const mobilePopupRef=useRef(null);// Флаг для отслеживания программного закрытия попапа\nconst isProgrammaticClose=useRef(false);// Создаем мобильный попап\nuseEffect(()=>{if(!mobilePopupRef.current){const popupDiv=document.createElement('div');popupDiv.className='map-popup-mobile';document.body.appendChild(popupDiv);mobilePopupRef.current=popupDiv;return()=>{document.body.removeChild(popupDiv);mobilePopupRef.current=null;};}},[]);const showMobilePopup=useCallback(place=>{if(!mobilePopupRef.current)return;const popupContent=`\n      <div class=\"place-card\">\n        <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" />\n        <div class=\"place-content\">\n          <h3>${place.name}</h3>\n          <p>${place.description}</p>\n          <div class=\"place-links-social\">\n            ${place.instagram?`<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" /></a>`:''}\n            ${place.maps_url?`<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" /></a>`:''}\n          </div>\n        </div>\n        <button class=\"close-btn-mobile\">×</button>\n      </div>\n    `;mobilePopupRef.current.innerHTML=popupContent;mobilePopupRef.current.classList.add('active');const closeBtn=mobilePopupRef.current.querySelector('.close-btn-mobile');if(closeBtn){closeBtn.addEventListener('click',()=>{if(mobilePopupRef.current){mobilePopupRef.current.classList.remove('active');if(activeMarkerRef.current){activeMarkerRef.current.setIcon(createDefaultIcon());activeMarkerRef.current=null;}// Сообщаем, что попап закрыт, чтобы сбросить selectedPlace\nif(onPopupClose){onPopupClose();}}});}},[onPopupClose]);const createDefaultIcon=useCallback(()=>{console.log('Creating default icon');return L.divIcon({className:'marker-default',iconSize:[30,30],iconAnchor:[15,15],html:'<div></div>'});},[]);const createCustomIcon=useCallback(()=>{console.log('Creating custom icon');return L.divIcon({className:'marker-active',iconSize:[30,40],iconAnchor:[15,40],popupAnchor:[0,-40],html:'<div></div>'});},[]);const createMarkerClusterGroup=useCallback(()=>{console.log('Creating marker cluster group with settings:',config.mapSettings.clusterSettings);return L.markerClusterGroup({iconCreateFunction:cluster=>{const count=cluster.getChildCount();return L.divIcon({html:`<div class=\"cluster-icon\">${count}</div>`,className:'marker-cluster',iconSize:L.point(40,40)});},disableClusteringAtZoom:config.mapSettings.clusterSettings.disableClusteringAtZoom,spiderfyOnMaxZoom:false,maxClusterRadius:config.mapSettings.clusterSettings.maxClusterRadius,zoomToBoundsOnClick:false,showCoverageOnHover:false,animate:true,animateAddingMarkers:false});},[config.mapSettings.clusterSettings]);const updateMarkers=useCallback(()=>{console.log('Updating markers');if(!mapRef.current||!markersRef.current)return;// Очищаем все слои, включая предыдущие маркеры\nmarkersRef.current.clearLayers();// Сбрасываем активный маркер\nactiveMarkerRef.current=null;const defaultIcon=createDefaultIcon();const customIcon=createCustomIcon();// Создаем маркеры с tooltips\nconst markers=[];places.forEach(place=>{var _markersRef$current;const marker=L.marker([place.lat,place.lng],{icon:defaultIcon,riseOnHover:true,riseOffset:250});if(window.innerWidth>768){const popup=L.popup({maxWidth:500,className:'place-popup',closeButton:true,closeOnClick:false,autoPan:true,autoPanPadding:[50,50]}).setContent(createPopupContent(place));marker.bindPopup(popup);}// Создаем tooltip и делаем его невидимым по умолчанию\nmarker.bindTooltip(place.name,{permanent:true,direction:'bottom',offset:[0,5],className:'place-label',opacity:0});// Добавляем место в данные маркера для доступа в дальнейшем\nmarker.place=place;marker.on('click',()=>{var _mapRef$current,_mapRef$current2;console.log('Marker clicked:',place.name);// При клике на тот же маркер, отменяем выбор\nif(activeMarkerRef.current===marker){marker.setIcon(defaultIcon);if(window.innerWidth>768){isProgrammaticClose.current=true;marker.closePopup();}activeMarkerRef.current=null;onMarkerClick(place);// Передаем повторный клик для отмены выбора\nreturn;}// При клике на другой маркер\nif(activeMarkerRef.current&&activeMarkerRef.current!==marker){activeMarkerRef.current.setIcon(defaultIcon);if(window.innerWidth>768){isProgrammaticClose.current=true;activeMarkerRef.current.closePopup();}}marker.setIcon(customIcon);activeMarkerRef.current=marker;// Центрируем карту с проверкой зума\nconst currentZoom=((_mapRef$current=mapRef.current)===null||_mapRef$current===void 0?void 0:_mapRef$current.getZoom())||0;const targetZoom=currentZoom>=16?currentZoom:16;(_mapRef$current2=mapRef.current)===null||_mapRef$current2===void 0?void 0:_mapRef$current2.setView(marker.getLatLng(),targetZoom,{animate:true,duration:0.5});if(window.innerWidth>768){marker.openPopup();}else{showMobilePopup(place);}onMarkerClick(place);});markers.push(marker);(_markersRef$current=markersRef.current)===null||_markersRef$current===void 0?void 0:_markersRef$current.addLayer(marker);// Устанавливаем активный маркер для выбранного места\nif(selectedPlace&&selectedPlace.name===place.name){console.log('Setting active marker for selected place:',place.name);marker.setIcon(customIcon);activeMarkerRef.current=marker;if(window.innerWidth>768){marker.openPopup();}else{showMobilePopup(place);}}});// Функция для проверки наложения меток\nconst shouldShowLabel=(marker,visibleMarkers)=>{var _mapRef$current3;// Одиночные метки всегда показываем\nif(visibleMarkers.length<=1)return true;const markerPoint=(_mapRef$current3=mapRef.current)===null||_mapRef$current3===void 0?void 0:_mapRef$current3.latLngToContainerPoint(marker.getLatLng());if(!markerPoint)return false;// Минимальное расстояние между метками в пикселях\nconst minDistance=100;// Проверяем расстояние до других видимых меток\nfor(const otherMarker of visibleMarkers){var _mapRef$current4;if(marker===otherMarker)continue;const otherPoint=(_mapRef$current4=mapRef.current)===null||_mapRef$current4===void 0?void 0:_mapRef$current4.latLngToContainerPoint(otherMarker.getLatLng());if(!otherPoint)continue;const distance=markerPoint.distanceTo(otherPoint);if(distance<minDistance){var _mapRef$current5,_mapRef$current6;// Если метки слишком близко, показываем только ту, что ближе к центру экрана\nconst center=(_mapRef$current5=mapRef.current)===null||_mapRef$current5===void 0?void 0:_mapRef$current5.getCenter();if(!center)continue;const centerPoint=(_mapRef$current6=mapRef.current)===null||_mapRef$current6===void 0?void 0:_mapRef$current6.latLngToContainerPoint(center);if(!centerPoint)continue;const distToCenter=markerPoint.distanceTo(centerPoint);const otherDistToCenter=otherPoint.distanceTo(centerPoint);// Если эта метка дальше от центра, скрываем её\nif(distToCenter>otherDistToCenter){return false;}}}return true;};// Обновляем видимость названий меток при изменении зума или видимых маркеров\nconst updateLabelsVisibility=()=>{if(!mapRef.current||!markersRef.current)return;const zoom=mapRef.current.getZoom();const allMarkers=markers;// Для небольшого зума скрываем все названия\nif(zoom<14){allMarkers.forEach(marker=>{const tooltip=marker.getTooltip();if(tooltip)tooltip.setOpacity(0);});return;}// Получаем все маркеры, которые видны на экране (не в кластерах)\nconst visibleMarkers=[];allMarkers.forEach(marker=>{var _markersRef$current2;// Проверяем, является ли родитель маркера кластером\nconst parent=(_markersRef$current2=markersRef.current)===null||_markersRef$current2===void 0?void 0:_markersRef$current2.getVisibleParent(marker);if(parent===marker){visibleMarkers.push(marker);}});// Обновляем видимость для каждого видимого маркера\nvisibleMarkers.forEach(marker=>{const tooltip=marker.getTooltip();if(!tooltip)return;if(shouldShowLabel(marker,visibleMarkers)){tooltip.setOpacity(1);}else{tooltip.setOpacity(0);}});// Скрываем названия для маркеров в кластерах\nallMarkers.forEach(marker=>{if(!visibleMarkers.includes(marker)){const tooltip=marker.getTooltip();if(tooltip)tooltip.setOpacity(0);}});};// Добавляем обработчик клика на кластер\nmarkersRef.current.on('clusterclick',e=>{const cluster=e.layer;const childMarkers=cluster.getAllChildMarkers();if(childMarkers.length===1){childMarkers[0].fire('click');}else{var _mapRef$current7;(_mapRef$current7=mapRef.current)===null||_mapRef$current7===void 0?void 0:_mapRef$current7.setView(cluster.getLatLng(),16,{animate:true});}// Обновляем видимость названий после раскрытия кластера\nsetTimeout(updateLabelsVisibility,300);});// События, при которых нужно обновлять видимость названий\nmapRef.current.on('zoomend',updateLabelsVisibility);mapRef.current.on('moveend',updateLabelsVisibility);markersRef.current.on('animationend',updateLabelsVisibility);// Обновляем сразу после создания маркеров\nsetTimeout(updateLabelsVisibility,100);},[places,selectedPlace,createDefaultIcon,createCustomIcon,onMarkerClick,showMobilePopup]);useEffect(()=>{console.log('Initializing map');if(!containerRef.current||mapRef.current)return;const map=L.map(containerRef.current,{center:config.mapSettings.center,zoom:config.mapSettings.initialZoom,scrollWheelZoom:true,closePopupOnClick:true,tap:true,attributionControl:false,zoomControl:false,maxZoom:config.mapSettings.maxZoom,minZoom:config.mapSettings.initialZoom-2,bounceAtZoomLimits:false,touchZoom:'center',doubleClickZoom:'center'});L.tileLayer(config.mapSettings.tileLayer.url,{attribution:config.mapSettings.tileLayer.attribution,subdomains:config.mapSettings.tileLayer.subdomains,maxZoom:config.mapSettings.maxZoom,minZoom:config.mapSettings.initialZoom-2,preferCanvas:true}).addTo(map);L.control.attribution({position:'bottomright',prefix:false}).addTo(map);L.control.zoom({position:'topright'}).addTo(map);mapRef.current=map;markersRef.current=createMarkerClusterGroup();map.addLayer(markersRef.current);const handleResize=()=>{console.log('Window resized, updating map size');map.invalidateSize({animate:false,pan:false});};window.addEventListener('resize',handleResize);window.addEventListener('orientationchange',handleResize);setTimeout(handleResize,100);return()=>{console.log('Cleaning up map');window.removeEventListener('resize',handleResize);window.removeEventListener('orientationchange',handleResize);map.remove();mapRef.current=null;markersRef.current=null;};},[config,createMarkerClusterGroup]);useEffect(()=>{if(mapRef.current&&markersRef.current){console.log('Updating markers after dependency change');updateMarkers();// Добавляем обработчик события закрытия попапа\nconst popupCloseHandler=()=>{// Обрабатываем только если закрытие не программное\nif(!isProgrammaticClose.current){if(activeMarkerRef.current){// Только если закрытие инициировано пользователем\nactiveMarkerRef.current.setIcon(createDefaultIcon());activeMarkerRef.current=null;// Сообщаем, что попап закрыт пользователем\nif(onPopupClose){onPopupClose();}}}// Сбрасываем флаг после использования\nisProgrammaticClose.current=false;};// Удаляем старый обработчик, если он есть, и добавляем новый\nmapRef.current.off('popupclose');mapRef.current.on('popupclose',popupCloseHandler);return()=>{if(mapRef.current){mapRef.current.off('popupclose',popupCloseHandler);}};}},[updateMarkers,createDefaultIcon,onPopupClose]);// Обрабатываем изменение selectedPlace\nuseEffect(()=>{var _markersRef$current3;if(!mapRef.current||!selectedPlace)return;// Пытаемся найти маркер для выбранного места\nconst allLayers=((_markersRef$current3=markersRef.current)===null||_markersRef$current3===void 0?void 0:_markersRef$current3.getLayers())||[];const allMarkers=allLayers;// Маркер не найден, обновляем все маркеры\nif(allMarkers.length===0){updateMarkers();return;}// Центрируем карту на выбранном месте если selectedPlace изменился\nconst currentZoom=mapRef.current.getZoom();const targetZoom=currentZoom>=16?currentZoom:16;mapRef.current.setView([selectedPlace.lat,selectedPlace.lng],targetZoom,{animate:true,duration:0.5});},[selectedPlace,updateMarkers]);// Отслеживаем изменения границ карты\nuseEffect(()=>{if(!mapRef.current||!onBoundsChange)return;const handleMove=()=>{var _mapRef$current8;const bounds=(_mapRef$current8=mapRef.current)===null||_mapRef$current8===void 0?void 0:_mapRef$current8.getBounds();if(bounds){onBoundsChange(bounds);}};mapRef.current.on('moveend',handleMove);mapRef.current.on('zoomend',handleMove);// Вызываем handleMove сразу для установки начальных границ\nhandleMove();return()=>{if(mapRef.current){mapRef.current.off('moveend',handleMove);mapRef.current.off('zoomend',handleMove);}};},[mapRef,onBoundsChange]);// Предотвращаем скроллинг страницы при взаимодействии с картой на мобильных устройствах\nuseEffect(()=>{if(!mapRef.current)return;const preventBodyScrolling=e=>{e.preventDefault();};const handleMapTouch=()=>{document.body.style.overflow='hidden';document.addEventListener('touchmove',preventBodyScrolling,{passive:false});};const handleMapTouchEnd=()=>{document.body.style.overflow='';document.removeEventListener('touchmove',preventBodyScrolling);};const mapElement=mapRef.current.getContainer();mapElement.addEventListener('touchstart',handleMapTouch);mapElement.addEventListener('touchend',handleMapTouchEnd);mapElement.addEventListener('touchcancel',handleMapTouchEnd);return()=>{mapElement.removeEventListener('touchstart',handleMapTouch);mapElement.removeEventListener('touchend',handleMapTouchEnd);mapElement.removeEventListener('touchcancel',handleMapTouchEnd);};},[mapRef]);return/*#__PURE__*/_jsx(ContentContainer,{children:/*#__PURE__*/_jsx(MapContainer,{ref:containerRef})});};export default Map;","map":{"version":3,"names":["React","useEffect","useRef","useCallback","L","styled","jsx","_jsx","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapContainer","div","ContentContainer","createPopupContent","place","image","name","description","instagram","maps_url","Map","_ref","places","config","onMarkerClick","selectedPlace","mapRef","onPopupClose","onBoundsChange","markersRef","activeMarkerRef","containerRef","mobilePopupRef","isProgrammaticClose","current","popupDiv","document","createElement","className","body","appendChild","removeChild","showMobilePopup","popupContent","innerHTML","classList","add","closeBtn","querySelector","addEventListener","remove","setIcon","createDefaultIcon","console","log","divIcon","iconSize","iconAnchor","html","createCustomIcon","popupAnchor","createMarkerClusterGroup","mapSettings","clusterSettings","markerClusterGroup","iconCreateFunction","cluster","count","getChildCount","point","disableClusteringAtZoom","spiderfyOnMaxZoom","maxClusterRadius","zoomToBoundsOnClick","showCoverageOnHover","animate","animateAddingMarkers","updateMarkers","clearLayers","defaultIcon","customIcon","markers","forEach","_markersRef$current","marker","lat","lng","icon","riseOnHover","riseOffset","window","innerWidth","popup","maxWidth","closeButton","closeOnClick","autoPan","autoPanPadding","setContent","bindPopup","bindTooltip","permanent","direction","offset","opacity","on","_mapRef$current","_mapRef$current2","closePopup","currentZoom","getZoom","targetZoom","setView","getLatLng","duration","openPopup","push","addLayer","shouldShowLabel","visibleMarkers","_mapRef$current3","length","markerPoint","latLngToContainerPoint","minDistance","otherMarker","_mapRef$current4","otherPoint","distance","distanceTo","_mapRef$current5","_mapRef$current6","center","getCenter","centerPoint","distToCenter","otherDistToCenter","updateLabelsVisibility","zoom","allMarkers","tooltip","getTooltip","setOpacity","_markersRef$current2","parent","getVisibleParent","includes","e","layer","childMarkers","getAllChildMarkers","fire","_mapRef$current7","setTimeout","map","initialZoom","scrollWheelZoom","closePopupOnClick","tap","attributionControl","zoomControl","maxZoom","minZoom","bounceAtZoomLimits","touchZoom","doubleClickZoom","tileLayer","url","attribution","subdomains","preferCanvas","addTo","control","position","prefix","handleResize","invalidateSize","pan","removeEventListener","popupCloseHandler","off","_markersRef$current3","allLayers","getLayers","handleMove","_mapRef$current8","bounds","getBounds","preventBodyScrolling","preventDefault","handleMapTouch","style","overflow","passive","handleMapTouchEnd","mapElement","getContainer","children","ref"],"sources":["/Users/borvel/Documents/GitHub/places-app/src/components/Map/Map.tsx"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { Place, AppConfig } from '../../types/places';\nimport { styled } from 'styled-components';\n\n// Fix for default icon\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\ninterface MapProps {\n  places: Place[];\n  config: AppConfig;\n  onMarkerClick: (place: Place) => void;\n  selectedPlace?: Place | null;\n  mapRef: React.MutableRefObject<L.Map | null>;\n  onPopupClose?: () => void;\n  onBoundsChange?: (bounds: L.LatLngBounds) => void;\n}\n\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  will-change: transform;\n  transform: translateZ(0);\n  backface-visibility: hidden;\n  perspective: 1000px;\n\n  /* Дополнительные фиксы для iOS устройств */\n  @supports (-webkit-touch-callout: none) {\n    position: fixed !important;\n    top: 56px !important;\n    bottom: 0 !important;\n    left: 0 !important;\n    right: 0 !important;\n    width: 100% !important;\n    height: calc(100vh - 56px) !important;\n  }\n\n  /* Фикс для всех мобильных устройств */\n  @media (max-width: 768px) {\n    position: fixed !important;\n    top: 56px !important;\n    bottom: 0 !important;\n    left: 0 !important;\n    right: 0 !important;\n    width: 100% !important;\n    height: calc(100vh - 56px) !important;\n  }\n`;\n\n// Создаем стиль для контейнера контента на мобильных устройствах\nconst ContentContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  /* Дополнительные фиксы для iOS устройств */\n  @supports (-webkit-touch-callout: none) {\n    position: fixed !important;\n    top: 56px !important;\n    bottom: 0 !important;\n    left: 0 !important;\n    right: 0 !important;\n    width: 100% !important;\n    height: calc(100vh - 56px) !important;\n    overflow: hidden !important;\n  }\n\n  /* Фикс для всех мобильных устройств */\n  @media (max-width: 768px) {\n    position: fixed !important;\n    top: 56px !important;\n    bottom: 0 !important;\n    left: 0 !important;\n    right: 0 !important;\n    width: 100% !important;\n    height: calc(100vh - 56px) !important;\n    overflow: hidden !important;\n  }\n`;\n\n// Расширяем интерфейс MapOptions для поддержки дополнительных свойств\ndeclare module 'leaflet' {\n  interface MapOptions {\n    tap?: boolean;\n  }\n\n  interface TileLayerOptions {\n    preferCanvas?: boolean;\n  }\n}\n\nconst createPopupContent = (place: Place) => `\n  <div class=\"place-card\">\n    <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" style=\"width: 100%; height: 200px; object-fit: cover;\" />\n    <div class=\"place-content\" style=\"padding: 15px;\">\n      <h3 style=\"margin: 0; font-size: 18px;\">${place.name}</h3>\n      <p style=\"margin: 10px 0; font-size: 14px;\">${place.description}</p>\n      <div class=\"place-links-social\" style=\"margin-top: 10px;\">\n        ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n        ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n      </div>\n    </div>\n  </div>\n`;\n\nexport const Map: React.FC<MapProps> = ({ places, config, onMarkerClick, selectedPlace, mapRef, onPopupClose, onBoundsChange }) => {\n  const markersRef = useRef<L.MarkerClusterGroup | null>(null);\n  const activeMarkerRef = useRef<L.Marker | null>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const mobilePopupRef = useRef<HTMLDivElement | null>(null);\n  // Флаг для отслеживания программного закрытия попапа\n  const isProgrammaticClose = useRef(false);\n\n  // Создаем мобильный попап\n  useEffect(() => {\n    if (!mobilePopupRef.current) {\n      const popupDiv = document.createElement('div');\n      popupDiv.className = 'map-popup-mobile';\n      document.body.appendChild(popupDiv);\n      mobilePopupRef.current = popupDiv;\n\n      return () => {\n        document.body.removeChild(popupDiv);\n        mobilePopupRef.current = null;\n      };\n    }\n  }, []);\n\n  const showMobilePopup = useCallback((place: Place) => {\n    if (!mobilePopupRef.current) return;\n\n    const popupContent = `\n      <div class=\"place-card\">\n        <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" />\n        <div class=\"place-content\">\n          <h3>${place.name}</h3>\n          <p>${place.description}</p>\n          <div class=\"place-links-social\">\n            ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" /></a>` : ''}\n            ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" /></a>` : ''}\n          </div>\n        </div>\n        <button class=\"close-btn-mobile\">×</button>\n      </div>\n    `;\n\n    mobilePopupRef.current.innerHTML = popupContent;\n    mobilePopupRef.current.classList.add('active');\n\n    const closeBtn = mobilePopupRef.current.querySelector('.close-btn-mobile');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => {\n        if (mobilePopupRef.current) {\n          mobilePopupRef.current.classList.remove('active');\n          if (activeMarkerRef.current) {\n            activeMarkerRef.current.setIcon(createDefaultIcon());\n            activeMarkerRef.current = null;\n          }\n\n          // Сообщаем, что попап закрыт, чтобы сбросить selectedPlace\n          if (onPopupClose) {\n            onPopupClose();\n          }\n        }\n      });\n    }\n  }, [onPopupClose]);\n\n  const createDefaultIcon = useCallback(() => {\n    console.log('Creating default icon');\n    return L.divIcon({\n      className: 'marker-default',\n      iconSize: [30, 30],\n      iconAnchor: [15, 15],\n      html: '<div></div>'\n    });\n  }, []);\n\n  const createCustomIcon = useCallback(() => {\n    console.log('Creating custom icon');\n    return L.divIcon({\n      className: 'marker-active',\n      iconSize: [30, 40],\n      iconAnchor: [15, 40],\n      popupAnchor: [0, -40],\n      html: '<div></div>'\n    });\n  }, []);\n\n  const createMarkerClusterGroup = useCallback(() => {\n    console.log('Creating marker cluster group with settings:', config.mapSettings.clusterSettings);\n    return L.markerClusterGroup({\n      iconCreateFunction: (cluster: L.MarkerCluster) => {\n        const count = cluster.getChildCount();\n        return L.divIcon({\n          html: `<div class=\"cluster-icon\">${count}</div>`,\n          className: 'marker-cluster',\n          iconSize: L.point(40, 40)\n        });\n      },\n      disableClusteringAtZoom: config.mapSettings.clusterSettings.disableClusteringAtZoom,\n      spiderfyOnMaxZoom: false,\n      maxClusterRadius: config.mapSettings.clusterSettings.maxClusterRadius,\n      zoomToBoundsOnClick: false,\n      showCoverageOnHover: false,\n      animate: true,\n      animateAddingMarkers: false\n    });\n  }, [config.mapSettings.clusterSettings]);\n\n  const updateMarkers = useCallback(() => {\n    console.log('Updating markers');\n    if (!mapRef.current || !markersRef.current) return;\n\n    // Очищаем все слои, включая предыдущие маркеры\n    markersRef.current.clearLayers();\n\n    // Сбрасываем активный маркер\n    activeMarkerRef.current = null;\n\n    const defaultIcon = createDefaultIcon();\n    const customIcon = createCustomIcon();\n\n    // Создаем маркеры с tooltips\n    const markers: L.Marker[] = [];\n    places.forEach(place => {\n      const marker = L.marker([place.lat, place.lng], {\n        icon: defaultIcon,\n        riseOnHover: true,\n        riseOffset: 250\n      });\n\n      if (window.innerWidth > 768) {\n        const popup = L.popup({\n          maxWidth: 500,\n          className: 'place-popup',\n          closeButton: true,\n          closeOnClick: false,\n          autoPan: true,\n          autoPanPadding: [50, 50]\n        }).setContent(createPopupContent(place));\n\n        marker.bindPopup(popup);\n      }\n\n      // Создаем tooltip и делаем его невидимым по умолчанию\n      marker.bindTooltip(place.name, {\n        permanent: true,\n        direction: 'bottom',\n        offset: [0, 5],\n        className: 'place-label',\n        opacity: 0\n      });\n\n      // Добавляем место в данные маркера для доступа в дальнейшем\n      (marker as any).place = place;\n\n      marker.on('click', () => {\n        console.log('Marker clicked:', place.name);\n\n        // При клике на тот же маркер, отменяем выбор\n        if (activeMarkerRef.current === marker) {\n          marker.setIcon(defaultIcon);\n          if (window.innerWidth > 768) {\n            isProgrammaticClose.current = true;\n            marker.closePopup();\n          }\n          activeMarkerRef.current = null;\n          onMarkerClick(place); // Передаем повторный клик для отмены выбора\n          return;\n        }\n\n        // При клике на другой маркер\n        if (activeMarkerRef.current && activeMarkerRef.current !== marker) {\n          activeMarkerRef.current.setIcon(defaultIcon);\n          if (window.innerWidth > 768) {\n            isProgrammaticClose.current = true;\n            activeMarkerRef.current.closePopup();\n          }\n        }\n\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n\n        // Центрируем карту с проверкой зума\n        const currentZoom = mapRef.current?.getZoom() || 0;\n        const targetZoom = currentZoom >= 16 ? currentZoom : 16;\n\n        mapRef.current?.setView(marker.getLatLng(), targetZoom, {\n          animate: true,\n          duration: 0.5\n        });\n\n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n\n        onMarkerClick(place);\n      });\n\n      markers.push(marker);\n      markersRef.current?.addLayer(marker);\n\n      // Устанавливаем активный маркер для выбранного места\n      if (selectedPlace && selectedPlace.name === place.name) {\n        console.log('Setting active marker for selected place:', place.name);\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n\n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n      }\n    });\n\n    // Функция для проверки наложения меток\n    const shouldShowLabel = (marker: L.Marker, visibleMarkers: L.Marker[]): boolean => {\n      // Одиночные метки всегда показываем\n      if (visibleMarkers.length <= 1) return true;\n\n      const markerPoint = mapRef.current?.latLngToContainerPoint(marker.getLatLng());\n      if (!markerPoint) return false;\n\n      // Минимальное расстояние между метками в пикселях\n      const minDistance = 100;\n\n      // Проверяем расстояние до других видимых меток\n      for (const otherMarker of visibleMarkers) {\n        if (marker === otherMarker) continue;\n\n        const otherPoint = mapRef.current?.latLngToContainerPoint(otherMarker.getLatLng());\n        if (!otherPoint) continue;\n\n        const distance = markerPoint.distanceTo(otherPoint);\n        if (distance < minDistance) {\n          // Если метки слишком близко, показываем только ту, что ближе к центру экрана\n          const center = mapRef.current?.getCenter();\n          if (!center) continue;\n\n          const centerPoint = mapRef.current?.latLngToContainerPoint(center);\n          if (!centerPoint) continue;\n\n          const distToCenter = markerPoint.distanceTo(centerPoint);\n          const otherDistToCenter = otherPoint.distanceTo(centerPoint);\n\n          // Если эта метка дальше от центра, скрываем её\n          if (distToCenter > otherDistToCenter) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    };\n\n    // Обновляем видимость названий меток при изменении зума или видимых маркеров\n    const updateLabelsVisibility = () => {\n      if (!mapRef.current || !markersRef.current) return;\n\n      const zoom = mapRef.current.getZoom();\n      const allMarkers = markers;\n\n      // Для небольшого зума скрываем все названия\n      if (zoom < 14) {\n        allMarkers.forEach(marker => {\n          const tooltip = marker.getTooltip();\n          if (tooltip) tooltip.setOpacity(0);\n        });\n        return;\n      }\n\n      // Получаем все маркеры, которые видны на экране (не в кластерах)\n      const visibleMarkers: L.Marker[] = [];\n      allMarkers.forEach(marker => {\n        // Проверяем, является ли родитель маркера кластером\n        const parent = markersRef.current?.getVisibleParent(marker);\n        if (parent === marker) {\n          visibleMarkers.push(marker);\n        }\n      });\n\n      // Обновляем видимость для каждого видимого маркера\n      visibleMarkers.forEach(marker => {\n        const tooltip = marker.getTooltip();\n        if (!tooltip) return;\n\n        if (shouldShowLabel(marker, visibleMarkers)) {\n          tooltip.setOpacity(1);\n        } else {\n          tooltip.setOpacity(0);\n        }\n      });\n\n      // Скрываем названия для маркеров в кластерах\n      allMarkers.forEach(marker => {\n        if (!visibleMarkers.includes(marker)) {\n          const tooltip = marker.getTooltip();\n          if (tooltip) tooltip.setOpacity(0);\n        }\n      });\n    };\n\n    // Добавляем обработчик клика на кластер\n    markersRef.current.on('clusterclick', (e: L.LeafletEvent) => {\n      const cluster = e.layer as L.MarkerCluster;\n      const childMarkers = cluster.getAllChildMarkers();\n\n      if (childMarkers.length === 1) {\n        childMarkers[0].fire('click');\n      } else {\n        mapRef.current?.setView(cluster.getLatLng(), 16, { animate: true });\n      }\n\n      // Обновляем видимость названий после раскрытия кластера\n      setTimeout(updateLabelsVisibility, 300);\n    });\n\n    // События, при которых нужно обновлять видимость названий\n    mapRef.current.on('zoomend', updateLabelsVisibility);\n    mapRef.current.on('moveend', updateLabelsVisibility);\n    markersRef.current.on('animationend', updateLabelsVisibility);\n\n    // Обновляем сразу после создания маркеров\n    setTimeout(updateLabelsVisibility, 100);\n  }, [places, selectedPlace, createDefaultIcon, createCustomIcon, onMarkerClick, showMobilePopup]);\n\n  useEffect(() => {\n    console.log('Initializing map');\n    if (!containerRef.current || mapRef.current) return;\n\n    const map = L.map(containerRef.current, {\n      center: config.mapSettings.center,\n      zoom: config.mapSettings.initialZoom,\n      scrollWheelZoom: true,\n      closePopupOnClick: true,\n      tap: true,\n      attributionControl: false,\n      zoomControl: false,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2,\n      bounceAtZoomLimits: false,\n      touchZoom: 'center',\n      doubleClickZoom: 'center'\n    });\n\n    L.tileLayer(config.mapSettings.tileLayer.url, {\n      attribution: config.mapSettings.tileLayer.attribution,\n      subdomains: config.mapSettings.tileLayer.subdomains,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2,\n      preferCanvas: true\n    }).addTo(map);\n\n    L.control.attribution({\n      position: 'bottomright',\n      prefix: false\n    }).addTo(map);\n\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(map);\n\n    mapRef.current = map;\n    markersRef.current = createMarkerClusterGroup();\n    map.addLayer(markersRef.current);\n\n    const handleResize = () => {\n      console.log('Window resized, updating map size');\n      map.invalidateSize({ animate: false, pan: false });\n    };\n\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('orientationchange', handleResize);\n\n    setTimeout(handleResize, 100);\n\n    return () => {\n      console.log('Cleaning up map');\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('orientationchange', handleResize);\n      map.remove();\n      mapRef.current = null;\n      markersRef.current = null;\n    };\n  }, [config, createMarkerClusterGroup]);\n\n  useEffect(() => {\n    if (mapRef.current && markersRef.current) {\n      console.log('Updating markers after dependency change');\n      updateMarkers();\n\n      // Добавляем обработчик события закрытия попапа\n      const popupCloseHandler = () => {\n        // Обрабатываем только если закрытие не программное\n        if (!isProgrammaticClose.current) {\n          if (activeMarkerRef.current) {\n            // Только если закрытие инициировано пользователем\n            activeMarkerRef.current.setIcon(createDefaultIcon());\n            activeMarkerRef.current = null;\n\n            // Сообщаем, что попап закрыт пользователем\n            if (onPopupClose) {\n              onPopupClose();\n            }\n          }\n        }\n        // Сбрасываем флаг после использования\n        isProgrammaticClose.current = false;\n      };\n\n      // Удаляем старый обработчик, если он есть, и добавляем новый\n      mapRef.current.off('popupclose');\n      mapRef.current.on('popupclose', popupCloseHandler);\n\n      return () => {\n        if (mapRef.current) {\n          mapRef.current.off('popupclose', popupCloseHandler);\n        }\n      };\n    }\n  }, [updateMarkers, createDefaultIcon, onPopupClose]);\n\n  // Обрабатываем изменение selectedPlace\n  useEffect(() => {\n    if (!mapRef.current || !selectedPlace) return;\n\n    // Пытаемся найти маркер для выбранного места\n    const allLayers = markersRef.current?.getLayers() || [];\n    const allMarkers = allLayers as L.Marker[];\n\n    // Маркер не найден, обновляем все маркеры\n    if (allMarkers.length === 0) {\n      updateMarkers();\n      return;\n    }\n\n    // Центрируем карту на выбранном месте если selectedPlace изменился\n    const currentZoom = mapRef.current.getZoom();\n    const targetZoom = currentZoom >= 16 ? currentZoom : 16;\n\n    mapRef.current.setView([selectedPlace.lat, selectedPlace.lng], targetZoom, {\n      animate: true,\n      duration: 0.5\n    });\n  }, [selectedPlace, updateMarkers]);\n\n  // Отслеживаем изменения границ карты\n  useEffect(() => {\n    if (!mapRef.current || !onBoundsChange) return;\n\n    const handleMove = () => {\n      const bounds = mapRef.current?.getBounds();\n      if (bounds) {\n        onBoundsChange(bounds);\n      }\n    };\n\n    mapRef.current.on('moveend', handleMove);\n    mapRef.current.on('zoomend', handleMove);\n\n    // Вызываем handleMove сразу для установки начальных границ\n    handleMove();\n\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.off('moveend', handleMove);\n        mapRef.current.off('zoomend', handleMove);\n      }\n    };\n  }, [mapRef, onBoundsChange]);\n\n  // Предотвращаем скроллинг страницы при взаимодействии с картой на мобильных устройствах\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    const preventBodyScrolling = (e: Event) => {\n      e.preventDefault();\n    };\n\n    const handleMapTouch = () => {\n      document.body.style.overflow = 'hidden';\n      document.addEventListener('touchmove', preventBodyScrolling, { passive: false });\n    };\n\n    const handleMapTouchEnd = () => {\n      document.body.style.overflow = '';\n      document.removeEventListener('touchmove', preventBodyScrolling);\n    };\n\n    const mapElement = mapRef.current.getContainer();\n    mapElement.addEventListener('touchstart', handleMapTouch);\n    mapElement.addEventListener('touchend', handleMapTouchEnd);\n    mapElement.addEventListener('touchcancel', handleMapTouchEnd);\n\n    return () => {\n      mapElement.removeEventListener('touchstart', handleMapTouch);\n      mapElement.removeEventListener('touchend', handleMapTouchEnd);\n      mapElement.removeEventListener('touchcancel', handleMapTouchEnd);\n    };\n  }, [mapRef]);\n\n  return (\n    <ContentContainer>\n      <MapContainer ref={containerRef} />\n    </ContentContainer>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}