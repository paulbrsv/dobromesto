{"ast":null,"code":"var _jsxFileName = \"/Users/borvel/Documents/GitHub/places-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { Header } from './components/Header/Header';\nimport { Map } from './components/Map/Map';\nimport { PlacesList } from './components/PlacesList/PlacesList';\nimport { Filters } from './components/Filters/Filters';\nimport { useUrlFilters } from './hooks/useUrlFilters';\nimport { styled } from 'styled-components';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n_c = AppContainer;\nconst Main = styled.main`\n  margin: 56px 0 0;\n  min-height: calc(100vh - 56px);\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n`;\n_c2 = Main;\nconst Content = styled.div`\n  position: relative;\n  flex: 1;\n  min-height: 0;\n  padding: 0;\n  display: flex;\n`;\n_c3 = Content;\nconst ShowListButton = styled.button`\n  position: absolute;\n  top: 90px;\n  right: 20px;\n  padding: 8px 16px;\n  background: ${props => {\n  var _props$theme$colors;\n  return ((_props$theme$colors = props.theme.colors) === null || _props$theme$colors === void 0 ? void 0 : _props$theme$colors.primary) || '#333';\n}};\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  z-index: 20;\n  display: none;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n\n  &:hover {\n    background: ${props => {\n  var _props$theme$colors2;\n  return ((_props$theme$colors2 = props.theme.colors) === null || _props$theme$colors2 === void 0 ? void 0 : _props$theme$colors2.hover) || '#555';\n}};\n  }\n`;\n_c4 = ShowListButton;\nconst NearbyButton = styled.button`\n  position: fixed;\n  font-size: 18px;\n  bottom: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 15px 30px;\n  background: #FF7F50;\n  color: white;\n  border: 0;\n  border-radius: 50px;\n  z-index: 9;\n  cursor: pointer;\n  font-weight: bold;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n  display: none;\n  transition: opacity 0.3s ease, visibility 0.3s ease;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n_c5 = NearbyButton;\nconst App = () => {\n  _s();\n  const [config, setConfig] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [isListVisible, setIsListVisible] = useState(window.innerWidth > 768);\n  const [isLoading, setIsLoading] = useState(false);\n  const mapRef = useRef(null);\n\n  // Вычисляем отфильтрованные места с помощью useMemo\n  const filteredPlaces = useMemo(() => {\n    if (!places || activeFilters.length === 0) return places;\n\n    // Фильтруем места, которые содержат хотя бы один из активных фильтров\n    return places.filter(place => place.attributes.some(attr => activeFilters.includes(attr)));\n  }, [places, activeFilters]);\n\n  // Вычисляем количество мест для каждого фильтра\n  const filterCounts = useMemo(() => {\n    const counts = {};\n    if (!places) return counts;\n    places.forEach(place => {\n      place.attributes.forEach(attr => {\n        counts[attr] = (counts[attr] || 0) + 1;\n      });\n    });\n    return counts;\n  }, [places]);\n\n  // Загружаем конфигурацию и данные\n  useEffect(() => {\n    fetch('/data/config.json').then(response => response.json()).then(configData => {\n      setConfig(configData);\n\n      // Загружаем данные о местах\n      return fetch('/data/places.json');\n    }).then(response => response.json()).then(placesData => {\n      setPlaces(placesData);\n      // Устанавливаем места в глобальной переменной для работы фильтров\n      window.places = placesData;\n    }).catch(error => console.error('Error loading data:', error));\n  }, []);\n\n  // Обработка изменения размера окна\n  useEffect(() => {\n    const handleResize = () => {\n      setIsListVisible(window.innerWidth > 768);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Обработчик изменения фильтров\n  const handleFilterChange = useCallback(newFilters => {\n    console.log('📍 Изменение фильтров:', newFilters);\n    setActiveFilters(newFilters);\n  }, []);\n\n  // Получаем функции для работы с фильтрами\n  const {\n    toggleFilter,\n    isFilterAvailable,\n    resetFilters\n  } = useUrlFilters(activeFilters, handleFilterChange, filterCounts);\n\n  // Обработчик сброса фильтров\n  const handleReset = useCallback(() => {\n    resetFilters();\n    setSelectedPlace(null); // Сбрасываем выбранное место\n  }, [resetFilters]);\n  const handlePlaceSelect = useCallback(place => {\n    setSelectedPlace(prev => (prev === null || prev === void 0 ? void 0 : prev.name) === place.name ? null : place);\n    if (window.innerWidth <= 768) {\n      setIsListVisible(false);\n    }\n  }, []);\n  const handleShowNearby = useCallback(() => {\n    // Только для мобильных устройств\n    if (window.innerWidth > 768) return;\n\n    // Начинаем загрузку\n    setIsLoading(true);\n\n    // Запрашиваем геолокацию\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by your browser');\n      setIsLoading(false);\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(position => {\n      const userLat = position.coords.latitude;\n      const userLng = position.coords.longitude;\n\n      // Центрируем карту по координатам пользователя\n      if (mapRef.current) {\n        mapRef.current.setView([userLat, userLng], 16, {\n          animate: true,\n          duration: 0.5\n        });\n\n        // Устанавливаем маркер с кастомной иконкой\n        const userMarker = L.marker([userLat, userLng], {\n          icon: L.icon({\n            iconUrl: '/data/images/pin.svg',\n            iconSize: [30, 40],\n            iconAnchor: [15, 40]\n          })\n        }).addTo(mapRef.current);\n      }\n\n      // Завершаем загрузку\n      setIsLoading(false);\n    }, error => {\n      console.error('Error getting location:', error);\n      alert('Unable to get your location');\n      setIsLoading(false);\n    });\n  }, [mapRef]);\n  const handlePopupClose = useCallback(() => {\n    setSelectedPlace(null);\n  }, []);\n  if (!config) return null;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: config.styleSettings,\n    children: /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        config: config\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        children: [/*#__PURE__*/_jsxDEV(Filters, {\n          config: config,\n          activeFilters: activeFilters,\n          onFilterChange: handleFilterChange,\n          filterCounts: filterCounts,\n          toggleFilter: toggleFilter,\n          isFilterAvailable: isFilterAvailable,\n          resetFilters: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          children: [/*#__PURE__*/_jsxDEV(Map, {\n            places: filteredPlaces,\n            config: config,\n            onMarkerClick: handlePlaceSelect,\n            selectedPlace: selectedPlace,\n            mapRef: mapRef,\n            onPopupClose: handlePopupClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PlacesList, {\n            places: filteredPlaces,\n            config: config,\n            onPlaceSelect: handlePlaceSelect,\n            selectedPlace: selectedPlace,\n            isVisible: isListVisible,\n            onClose: () => setIsListVisible(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ShowListButton, {\n            onClick: () => setIsListVisible(true),\n            children: config.content.buttonLabels.showList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NearbyButton, {\n            onClick: handleShowNearby,\n            children: isLoading ? 'Loading...' : config.content.buttonLabels.showNearby\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FO5O+TFGD/HXBNaB3WWqmssxhNQ=\", false, function () {\n  return [useUrlFilters];\n});\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Main\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"ShowListButton\");\n$RefreshReg$(_c5, \"NearbyButton\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useRef","ThemeProvider","Header","Map","PlacesList","Filters","useUrlFilters","styled","L","jsxDEV","_jsxDEV","AppContainer","div","_c","Main","main","_c2","Content","_c3","ShowListButton","button","props","_props$theme$colors","theme","colors","primary","_props$theme$colors2","hover","_c4","NearbyButton","_c5","App","_s","config","setConfig","places","setPlaces","activeFilters","setActiveFilters","selectedPlace","setSelectedPlace","isListVisible","setIsListVisible","window","innerWidth","isLoading","setIsLoading","mapRef","filteredPlaces","length","filter","place","attributes","some","attr","includes","filterCounts","counts","forEach","fetch","then","response","json","configData","placesData","catch","error","console","handleResize","addEventListener","removeEventListener","handleFilterChange","newFilters","log","toggleFilter","isFilterAvailable","resetFilters","handleReset","handlePlaceSelect","prev","name","handleShowNearby","navigator","geolocation","alert","getCurrentPosition","position","userLat","coords","latitude","userLng","longitude","current","setView","animate","duration","userMarker","marker","icon","iconUrl","iconSize","iconAnchor","addTo","handlePopupClose","styleSettings","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","onMarkerClick","onPopupClose","onPlaceSelect","isVisible","onClose","onClick","content","buttonLabels","showList","showNearby","_c6","$RefreshReg$"],"sources":["/Users/borvel/Documents/GitHub/places-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { Header } from './components/Header/Header';\nimport { Map } from './components/Map/Map';\nimport { PlacesList } from './components/PlacesList/PlacesList';\nimport { Filters } from './components/Filters/Filters';\nimport { Place, AppConfig } from './types/places';\nimport { useUrlFilters } from './hooks/useUrlFilters';\nimport { styled } from 'styled-components';\nimport L from 'leaflet';\n\nconst AppContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Main = styled.main`\n  margin: 56px 0 0;\n  min-height: calc(100vh - 56px);\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n`;\n\nconst Content = styled.div`\n  position: relative;\n  flex: 1;\n  min-height: 0;\n  padding: 0;\n  display: flex;\n`;\n\nconst ShowListButton = styled.button`\n  position: absolute;\n  top: 90px;\n  right: 20px;\n  padding: 8px 16px;\n  background: ${props => props.theme.colors?.primary || '#333'};\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  z-index: 20;\n  display: none;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n\n  &:hover {\n    background: ${props => props.theme.colors?.hover || '#555'};\n  }\n`;\n\nconst NearbyButton = styled.button`\n  position: fixed;\n  font-size: 18px;\n  bottom: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 15px 30px;\n  background: #FF7F50;\n  color: white;\n  border: 0;\n  border-radius: 50px;\n  z-index: 9;\n  cursor: pointer;\n  font-weight: bold;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n  display: none;\n  transition: opacity 0.3s ease, visibility 0.3s ease;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n\nconst App: React.FC = () => {\n  const [config, setConfig] = useState<AppConfig | null>(null);\n  const [places, setPlaces] = useState<Place[]>([]);\n  const [activeFilters, setActiveFilters] = useState<string[]>([]);\n  const [selectedPlace, setSelectedPlace] = useState<Place | null>(null);\n  const [isListVisible, setIsListVisible] = useState(window.innerWidth > 768);\n  const [isLoading, setIsLoading] = useState(false);\n  const mapRef = useRef<L.Map | null>(null);\n\n  // Вычисляем отфильтрованные места с помощью useMemo\n  const filteredPlaces = useMemo(() => {\n    if (!places || activeFilters.length === 0) return places;\n    \n    // Фильтруем места, которые содержат хотя бы один из активных фильтров\n    return places.filter(place => \n      place.attributes.some(attr => activeFilters.includes(attr))\n    );\n  }, [places, activeFilters]);\n\n  // Вычисляем количество мест для каждого фильтра\n  const filterCounts = useMemo(() => {\n    const counts: Record<string, number> = {};\n    if (!places) return counts;\n\n    places.forEach(place => {\n      place.attributes.forEach(attr => {\n        counts[attr] = (counts[attr] || 0) + 1;\n      });\n    });\n\n    return counts;\n  }, [places]);\n\n  // Загружаем конфигурацию и данные\n  useEffect(() => {\n    fetch('/data/config.json')\n      .then(response => response.json())\n      .then(configData => {\n        setConfig(configData);\n        \n        // Загружаем данные о местах\n        return fetch('/data/places.json');\n      })\n      .then(response => response.json())\n      .then(placesData => {\n        setPlaces(placesData);\n        // Устанавливаем места в глобальной переменной для работы фильтров\n        window.places = placesData;\n      })\n      .catch(error => console.error('Error loading data:', error));\n  }, []);\n\n  // Обработка изменения размера окна\n  useEffect(() => {\n    const handleResize = () => {\n      setIsListVisible(window.innerWidth > 768);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Обработчик изменения фильтров\n  const handleFilterChange = useCallback((newFilters: string[]) => {\n    console.log('📍 Изменение фильтров:', newFilters);\n    setActiveFilters(newFilters);\n  }, []);\n\n  // Получаем функции для работы с фильтрами\n  const { toggleFilter, isFilterAvailable, resetFilters } = useUrlFilters(\n    activeFilters,\n    handleFilterChange,\n    filterCounts\n  );\n\n  // Обработчик сброса фильтров\n  const handleReset = useCallback(() => {\n    resetFilters();\n    setSelectedPlace(null); // Сбрасываем выбранное место\n  }, [resetFilters]);\n\n  const handlePlaceSelect = useCallback((place: Place) => {\n    setSelectedPlace(prev => prev?.name === place.name ? null : place);\n    if (window.innerWidth <= 768) {\n      setIsListVisible(false);\n    }\n  }, []);\n\n  const handleShowNearby = useCallback(() => {\n    // Только для мобильных устройств\n    if (window.innerWidth > 768) return;\n    \n    // Начинаем загрузку\n    setIsLoading(true);\n    \n    // Запрашиваем геолокацию\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by your browser');\n      setIsLoading(false);\n      return;\n    }\n    \n    navigator.geolocation.getCurrentPosition(\n      position => {\n        const userLat = position.coords.latitude;\n        const userLng = position.coords.longitude;\n        \n        // Центрируем карту по координатам пользователя\n        if (mapRef.current) {\n          mapRef.current.setView([userLat, userLng], 16, {\n            animate: true,\n            duration: 0.5\n          });\n          \n          // Устанавливаем маркер с кастомной иконкой\n          const userMarker = L.marker([userLat, userLng], {\n            icon: L.icon({\n              iconUrl: '/data/images/pin.svg',\n              iconSize: [30, 40],\n              iconAnchor: [15, 40]\n            })\n          }).addTo(mapRef.current);\n        }\n        \n        // Завершаем загрузку\n        setIsLoading(false);\n      },\n      error => {\n        console.error('Error getting location:', error);\n        alert('Unable to get your location');\n        setIsLoading(false);\n      }\n    );\n  }, [mapRef]);\n\n  const handlePopupClose = useCallback(() => {\n    setSelectedPlace(null);\n  }, []);\n\n  if (!config) return null;\n\n  return (\n    <ThemeProvider theme={config.styleSettings}>\n      <AppContainer>\n        <Header config={config} />\n        <Main>\n          <Filters\n            config={config}\n            activeFilters={activeFilters}\n            onFilterChange={handleFilterChange}\n            filterCounts={filterCounts}\n            toggleFilter={toggleFilter}\n            isFilterAvailable={isFilterAvailable}\n            resetFilters={handleReset}\n          />\n          <Content>\n            <Map\n              places={filteredPlaces}\n              config={config}\n              onMarkerClick={handlePlaceSelect}\n              selectedPlace={selectedPlace}\n              mapRef={mapRef}\n              onPopupClose={handlePopupClose}\n            />\n            <PlacesList\n              places={filteredPlaces}\n              config={config}\n              onPlaceSelect={handlePlaceSelect}\n              selectedPlace={selectedPlace}\n              isVisible={isListVisible}\n              onClose={() => setIsListVisible(false)}\n            />\n            <ShowListButton onClick={() => setIsListVisible(true)}>\n              {config.content.buttonLabels.showList}\n            </ShowListButton>\n            <NearbyButton onClick={handleShowNearby}>\n              {isLoading ? 'Loading...' : config.content.buttonLabels.showNearby}\n            </NearbyButton>\n          </Content>\n        </Main>\n      </AppContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}