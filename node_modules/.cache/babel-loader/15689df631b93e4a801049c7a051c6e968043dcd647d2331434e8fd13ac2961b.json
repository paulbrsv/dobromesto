{"ast":null,"code":"var _jsxFileName = \"/Users/borvel/Documents/GitHub/places-app/src/components/Map/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { styled } from 'styled-components';\n\n// Fix for default icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  will-change: transform;\n  transform: translateZ(0);\n  backface-visibility: hidden;\n  perspective: 1000px;\n`;\n\n// Расширяем интерфейс MapOptions для поддержки дополнительных свойств\n_c = MapContainer;\nconst createPopupContent = place => `\n  <div class=\"place-card\">\n    <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" style=\"width: 100%; height: 200px; object-fit: cover;\" />\n    <div class=\"place-content\" style=\"padding: 15px;\">\n      <h3 style=\"margin: 0; font-size: 18px;\">${place.name}</h3>\n      <p style=\"margin: 10px 0; font-size: 14px;\">${place.description}</p>\n      <div class=\"place-links-social\" style=\"margin-top: 10px;\">\n        ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n        ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n      </div>\n    </div>\n  </div>\n`;\nexport const Map = ({\n  places,\n  config,\n  onMarkerClick,\n  selectedPlace,\n  mapRef,\n  onPopupClose,\n  onBoundsChange\n}) => {\n  _s();\n  const markersRef = useRef(null);\n  const activeMarkerRef = useRef(null);\n  const containerRef = useRef(null);\n  const mobilePopupRef = useRef(null);\n\n  // Создаем мобильный попап\n  useEffect(() => {\n    if (!mobilePopupRef.current) {\n      const popupDiv = document.createElement('div');\n      popupDiv.className = 'map-popup-mobile';\n      document.body.appendChild(popupDiv);\n      mobilePopupRef.current = popupDiv;\n      return () => {\n        document.body.removeChild(popupDiv);\n        mobilePopupRef.current = null;\n      };\n    }\n  }, []);\n  const showMobilePopup = useCallback(place => {\n    if (!mobilePopupRef.current) return;\n    const popupContent = `\n      <div class=\"place-card\">\n        <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" />\n        <div class=\"place-content\">\n          <h3>${place.name}</h3>\n          <p>${place.description}</p>\n          <div class=\"place-links-social\">\n            ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" /></a>` : ''}\n            ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" /></a>` : ''}\n          </div>\n        </div>\n        <button class=\"close-btn-mobile\">×</button>\n      </div>\n    `;\n    mobilePopupRef.current.innerHTML = popupContent;\n    mobilePopupRef.current.classList.add('active');\n    const closeBtn = mobilePopupRef.current.querySelector('.close-btn-mobile');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => {\n        if (mobilePopupRef.current) {\n          mobilePopupRef.current.classList.remove('active');\n          if (activeMarkerRef.current) {\n            activeMarkerRef.current.setIcon(createDefaultIcon());\n            activeMarkerRef.current = null;\n\n            // Сообщаем, что попап закрыт, чтобы сбросить selectedPlace\n            if (onPopupClose) {\n              onPopupClose();\n            }\n          }\n        }\n      });\n    }\n  }, [onPopupClose]);\n  const createDefaultIcon = useCallback(() => {\n    console.log('Creating default icon');\n    return L.divIcon({\n      className: 'marker-default',\n      iconSize: [30, 30],\n      iconAnchor: [15, 15],\n      html: '<div></div>'\n    });\n  }, []);\n  const createCustomIcon = useCallback(() => {\n    console.log('Creating custom icon');\n    return L.divIcon({\n      className: 'marker-active',\n      iconSize: [30, 40],\n      iconAnchor: [15, 40],\n      popupAnchor: [0, -40],\n      html: '<div></div>'\n    });\n  }, []);\n  const createMarkerClusterGroup = useCallback(() => {\n    console.log('Creating marker cluster group with settings:', config.mapSettings.clusterSettings);\n    return L.markerClusterGroup({\n      iconCreateFunction: cluster => {\n        const count = cluster.getChildCount();\n        return L.divIcon({\n          html: `<div style=\"background-color: #3388ff; color: white; border-radius: 50%; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\">${count}</div>`,\n          className: 'marker-cluster',\n          iconSize: [30, 30]\n        });\n      },\n      disableClusteringAtZoom: config.mapSettings.clusterSettings.disableClusteringAtZoom,\n      spiderfyOnMaxZoom: false,\n      maxClusterRadius: config.mapSettings.clusterSettings.maxClusterRadius,\n      zoomToBoundsOnClick: false,\n      showCoverageOnHover: false\n    });\n  }, [config.mapSettings.clusterSettings]);\n  const updateMarkers = useCallback(() => {\n    console.log('Updating markers');\n    if (!mapRef.current || !markersRef.current) return;\n    markersRef.current.clearLayers();\n    const defaultIcon = createDefaultIcon();\n    const customIcon = createCustomIcon();\n    places.forEach(place => {\n      var _markersRef$current;\n      const marker = L.marker([place.lat, place.lng], {\n        icon: defaultIcon,\n        riseOnHover: true,\n        riseOffset: 250\n      });\n      if (window.innerWidth > 768) {\n        const popup = L.popup({\n          maxWidth: 500,\n          className: 'place-popup',\n          closeButton: true,\n          closeOnClick: false,\n          autoPan: true,\n          autoPanPadding: [50, 50]\n        }).setContent(createPopupContent(place));\n        marker.bindPopup(popup);\n      }\n      marker.bindTooltip(place.name, {\n        permanent: false,\n        direction: 'bottom',\n        offset: [0, 5],\n        className: 'place-label',\n        opacity: 0\n      });\n      marker.on('click', () => {\n        console.log('Marker clicked:', place.name);\n        if (activeMarkerRef.current && activeMarkerRef.current !== marker) {\n          activeMarkerRef.current.setIcon(defaultIcon);\n          if (window.innerWidth > 768) {\n            activeMarkerRef.current.closePopup();\n          }\n        }\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n        onMarkerClick(place);\n      });\n      (_markersRef$current = markersRef.current) === null || _markersRef$current === void 0 ? void 0 : _markersRef$current.addLayer(marker);\n      if (selectedPlace && selectedPlace.name === place.name) {\n        console.log('Setting active marker for selected place:', place.name);\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n      }\n    });\n    const updateTooltipsVisibility = () => {\n      var _mapRef$current, _markersRef$current2;\n      const zoom = (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.getZoom();\n      console.log('Current zoom level:', zoom);\n      if (!zoom) return;\n      (_markersRef$current2 = markersRef.current) === null || _markersRef$current2 === void 0 ? void 0 : _markersRef$current2.getLayers().forEach(layer => {\n        const marker = layer;\n        const tooltip = marker.getTooltip();\n        if (tooltip) {\n          if (zoom >= 15) {\n            tooltip.setOpacity(1);\n          } else {\n            tooltip.setOpacity(0);\n          }\n        }\n      });\n    };\n    mapRef.current.on('zoomend', updateTooltipsVisibility);\n    updateTooltipsVisibility();\n  }, [places, selectedPlace, createDefaultIcon, createCustomIcon, onMarkerClick, showMobilePopup]);\n  useEffect(() => {\n    console.log('Initializing map');\n    if (!containerRef.current || mapRef.current) return;\n    const map = L.map(containerRef.current, {\n      center: config.mapSettings.center,\n      zoom: config.mapSettings.initialZoom,\n      scrollWheelZoom: true,\n      closePopupOnClick: true,\n      tap: true,\n      attributionControl: false,\n      zoomControl: false,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2\n    });\n    L.tileLayer(config.mapSettings.tileLayer.url, {\n      attribution: config.mapSettings.tileLayer.attribution,\n      subdomains: config.mapSettings.tileLayer.subdomains,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2,\n      preferCanvas: true\n    }).addTo(map);\n    L.control.attribution({\n      position: 'bottomright',\n      prefix: false\n    }).addTo(map);\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(map);\n    mapRef.current = map;\n    markersRef.current = createMarkerClusterGroup();\n    map.addLayer(markersRef.current);\n    const handleResize = () => {\n      console.log('Window resized, updating map size');\n      map.invalidateSize({\n        animate: false,\n        pan: false\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('orientationchange', handleResize);\n    setTimeout(handleResize, 100);\n    return () => {\n      console.log('Cleaning up map');\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('orientationchange', handleResize);\n      map.remove();\n      mapRef.current = null;\n      markersRef.current = null;\n    };\n  }, [config, createMarkerClusterGroup]);\n  useEffect(() => {\n    if (mapRef.current && markersRef.current) {\n      console.log('Updating markers after dependency change');\n      updateMarkers();\n    }\n  }, [updateMarkers]);\n  useEffect(() => {\n    if (mapRef.current && selectedPlace) {\n      console.log(`Setting view for selected place: ${selectedPlace.name}`);\n      const map = mapRef.current;\n      setTimeout(() => {\n        map.setView([selectedPlace.lat, selectedPlace.lng], 16, {\n          animate: true,\n          duration: 0.5\n        });\n      }, 100);\n    }\n  }, [selectedPlace]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    ref: containerRef,\n    className: \"map-wrapper\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 10\n  }, this);\n};\n_s(Map, \"GuvabZKh1vRWXLUCHlji3pSWP6g=\");\n_c2 = Map;\nexport default Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapContainer\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","L","styled","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapContainer","div","_c","createPopupContent","place","image","name","description","instagram","maps_url","Map","places","config","onMarkerClick","selectedPlace","mapRef","onPopupClose","onBoundsChange","_s","markersRef","activeMarkerRef","containerRef","mobilePopupRef","current","popupDiv","document","createElement","className","body","appendChild","removeChild","showMobilePopup","popupContent","innerHTML","classList","add","closeBtn","querySelector","addEventListener","remove","setIcon","createDefaultIcon","console","log","divIcon","iconSize","iconAnchor","html","createCustomIcon","popupAnchor","createMarkerClusterGroup","mapSettings","clusterSettings","markerClusterGroup","iconCreateFunction","cluster","count","getChildCount","disableClusteringAtZoom","spiderfyOnMaxZoom","maxClusterRadius","zoomToBoundsOnClick","showCoverageOnHover","updateMarkers","clearLayers","defaultIcon","customIcon","forEach","_markersRef$current","marker","lat","lng","icon","riseOnHover","riseOffset","window","innerWidth","popup","maxWidth","closeButton","closeOnClick","autoPan","autoPanPadding","setContent","bindPopup","bindTooltip","permanent","direction","offset","opacity","on","closePopup","openPopup","addLayer","updateTooltipsVisibility","_mapRef$current","_markersRef$current2","zoom","getZoom","getLayers","layer","tooltip","getTooltip","setOpacity","map","center","initialZoom","scrollWheelZoom","closePopupOnClick","tap","attributionControl","zoomControl","maxZoom","minZoom","tileLayer","url","attribution","subdomains","preferCanvas","addTo","control","position","prefix","handleResize","invalidateSize","animate","pan","setTimeout","removeEventListener","setView","duration","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/borvel/Documents/GitHub/places-app/src/components/Map/Map.tsx"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { Place, AppConfig } from '../../types/places';\nimport { styled } from 'styled-components';\n\n// Fix for default icon\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\ninterface MapProps {\n  places: Place[];\n  config: AppConfig;\n  onMarkerClick: (place: Place) => void;\n  selectedPlace?: Place | null;\n  mapRef: React.MutableRefObject<L.Map | null>;\n  onPopupClose?: () => void;\n  onBoundsChange?: (bounds: L.LatLngBounds) => void;\n}\n\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  will-change: transform;\n  transform: translateZ(0);\n  backface-visibility: hidden;\n  perspective: 1000px;\n`;\n\n// Расширяем интерфейс MapOptions для поддержки дополнительных свойств\ndeclare module 'leaflet' {\n  interface MapOptions {\n    tap?: boolean;\n  }\n  \n  interface TileLayerOptions {\n    preferCanvas?: boolean;\n  }\n}\n\nconst createPopupContent = (place: Place) => `\n  <div class=\"place-card\">\n    <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" style=\"width: 100%; height: 200px; object-fit: cover;\" />\n    <div class=\"place-content\" style=\"padding: 15px;\">\n      <h3 style=\"margin: 0; font-size: 18px;\">${place.name}</h3>\n      <p style=\"margin: 10px 0; font-size: 14px;\">${place.description}</p>\n      <div class=\"place-links-social\" style=\"margin-top: 10px;\">\n        ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n        ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n      </div>\n    </div>\n  </div>\n`;\n\nexport const Map: React.FC<MapProps> = ({ places, config, onMarkerClick, selectedPlace, mapRef, onPopupClose, onBoundsChange }) => {\n  const markersRef = useRef<L.MarkerClusterGroup | null>(null);\n  const activeMarkerRef = useRef<L.Marker | null>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const mobilePopupRef = useRef<HTMLDivElement | null>(null);\n\n  // Создаем мобильный попап\n  useEffect(() => {\n    if (!mobilePopupRef.current) {\n      const popupDiv = document.createElement('div');\n      popupDiv.className = 'map-popup-mobile';\n      document.body.appendChild(popupDiv);\n      mobilePopupRef.current = popupDiv;\n\n      return () => {\n        document.body.removeChild(popupDiv);\n        mobilePopupRef.current = null;\n      };\n    }\n  }, []);\n\n  const showMobilePopup = useCallback((place: Place) => {\n    if (!mobilePopupRef.current) return;\n\n    const popupContent = `\n      <div class=\"place-card\">\n        <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" />\n        <div class=\"place-content\">\n          <h3>${place.name}</h3>\n          <p>${place.description}</p>\n          <div class=\"place-links-social\">\n            ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" /></a>` : ''}\n            ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" /></a>` : ''}\n          </div>\n        </div>\n        <button class=\"close-btn-mobile\">×</button>\n      </div>\n    `;\n\n    mobilePopupRef.current.innerHTML = popupContent;\n    mobilePopupRef.current.classList.add('active');\n\n    const closeBtn = mobilePopupRef.current.querySelector('.close-btn-mobile');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => {\n        if (mobilePopupRef.current) {\n          mobilePopupRef.current.classList.remove('active');\n          if (activeMarkerRef.current) {\n            activeMarkerRef.current.setIcon(createDefaultIcon());\n            activeMarkerRef.current = null;\n            \n            // Сообщаем, что попап закрыт, чтобы сбросить selectedPlace\n            if (onPopupClose) {\n              onPopupClose();\n            }\n          }\n        }\n      });\n    }\n  }, [onPopupClose]);\n\n  const createDefaultIcon = useCallback(() => {\n    console.log('Creating default icon');\n    return L.divIcon({\n      className: 'marker-default',\n      iconSize: [30, 30],\n      iconAnchor: [15, 15],\n      html: '<div></div>'\n    });\n  }, []);\n\n  const createCustomIcon = useCallback(() => {\n    console.log('Creating custom icon');\n    return L.divIcon({\n      className: 'marker-active',\n      iconSize: [30, 40],\n      iconAnchor: [15, 40],\n      popupAnchor: [0, -40],\n      html: '<div></div>'\n    });\n  }, []);\n\n  const createMarkerClusterGroup = useCallback(() => {\n    console.log('Creating marker cluster group with settings:', config.mapSettings.clusterSettings);\n    return L.markerClusterGroup({\n      iconCreateFunction: (cluster: L.MarkerCluster) => {\n        const count = cluster.getChildCount();\n        return L.divIcon({\n          html: `<div style=\"background-color: #3388ff; color: white; border-radius: 50%; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\">${count}</div>`,\n          className: 'marker-cluster',\n          iconSize: [30, 30]\n        });\n      },\n      disableClusteringAtZoom: config.mapSettings.clusterSettings.disableClusteringAtZoom,\n      spiderfyOnMaxZoom: false,\n      maxClusterRadius: config.mapSettings.clusterSettings.maxClusterRadius,\n      zoomToBoundsOnClick: false,\n      showCoverageOnHover: false\n    });\n  }, [config.mapSettings.clusterSettings]);\n\n  const updateMarkers = useCallback(() => {\n    console.log('Updating markers');\n    if (!mapRef.current || !markersRef.current) return;\n\n    markersRef.current.clearLayers();\n    const defaultIcon = createDefaultIcon();\n    const customIcon = createCustomIcon();\n\n    places.forEach(place => {\n      const marker = L.marker([place.lat, place.lng], { \n        icon: defaultIcon,\n        riseOnHover: true,\n        riseOffset: 250\n      });\n\n      if (window.innerWidth > 768) {\n        const popup = L.popup({\n          maxWidth: 500,\n          className: 'place-popup',\n          closeButton: true,\n          closeOnClick: false,\n          autoPan: true,\n          autoPanPadding: [50, 50]\n        }).setContent(createPopupContent(place));\n\n        marker.bindPopup(popup);\n      }\n\n      marker.bindTooltip(place.name, {\n        permanent: false,\n        direction: 'bottom',\n        offset: [0, 5],\n        className: 'place-label',\n        opacity: 0\n      });\n\n      marker.on('click', () => {\n        console.log('Marker clicked:', place.name);\n        \n        if (activeMarkerRef.current && activeMarkerRef.current !== marker) {\n          activeMarkerRef.current.setIcon(defaultIcon);\n          if (window.innerWidth > 768) {\n            activeMarkerRef.current.closePopup();\n          }\n        }\n\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n\n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n\n        onMarkerClick(place);\n      });\n\n      markersRef.current?.addLayer(marker);\n\n      if (selectedPlace && selectedPlace.name === place.name) {\n        console.log('Setting active marker for selected place:', place.name);\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n        \n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n      }\n    });\n\n    const updateTooltipsVisibility = () => {\n      const zoom = mapRef.current?.getZoom();\n      console.log('Current zoom level:', zoom);\n      if (!zoom) return;\n\n      markersRef.current?.getLayers().forEach((layer) => {\n        const marker = layer as L.Marker;\n        const tooltip = marker.getTooltip();\n        if (tooltip) {\n          if (zoom >= 15) {\n            tooltip.setOpacity(1);\n          } else {\n            tooltip.setOpacity(0);\n          }\n        }\n      });\n    };\n\n    mapRef.current.on('zoomend', updateTooltipsVisibility);\n    updateTooltipsVisibility();\n  }, [places, selectedPlace, createDefaultIcon, createCustomIcon, onMarkerClick, showMobilePopup]);\n\n  useEffect(() => {\n    console.log('Initializing map');\n    if (!containerRef.current || mapRef.current) return;\n\n    const map = L.map(containerRef.current, {\n      center: config.mapSettings.center,\n      zoom: config.mapSettings.initialZoom,\n      scrollWheelZoom: true,\n      closePopupOnClick: true,\n      tap: true,\n      attributionControl: false,\n      zoomControl: false,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2\n    });\n\n    L.tileLayer(config.mapSettings.tileLayer.url, {\n      attribution: config.mapSettings.tileLayer.attribution,\n      subdomains: config.mapSettings.tileLayer.subdomains,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2,\n      preferCanvas: true\n    }).addTo(map);\n\n    L.control.attribution({\n      position: 'bottomright',\n      prefix: false\n    }).addTo(map);\n\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(map);\n\n    mapRef.current = map;\n    markersRef.current = createMarkerClusterGroup();\n    map.addLayer(markersRef.current);\n\n    const handleResize = () => {\n      console.log('Window resized, updating map size');\n      map.invalidateSize({ animate: false, pan: false });\n    };\n\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('orientationchange', handleResize);\n\n    setTimeout(handleResize, 100);\n\n    return () => {\n      console.log('Cleaning up map');\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('orientationchange', handleResize);\n      map.remove();\n      mapRef.current = null;\n      markersRef.current = null;\n    };\n  }, [config, createMarkerClusterGroup]);\n\n  useEffect(() => {\n    if (mapRef.current && markersRef.current) {\n      console.log('Updating markers after dependency change');\n      updateMarkers();\n    }\n  }, [updateMarkers]);\n\n  useEffect(() => {\n    if (mapRef.current && selectedPlace) {\n      console.log(`Setting view for selected place: ${selectedPlace.name}`);\n      const map = mapRef.current;\n      setTimeout(() => {\n        map.setView([selectedPlace.lat, selectedPlace.lng], 16, {\n          animate: true,\n          duration: 0.5\n        });\n      }, 100);\n    }\n  }, [selectedPlace]);\n\n  return <MapContainer ref={containerRef} className=\"map-wrapper\" />;\n};\n\nexport default Map; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}