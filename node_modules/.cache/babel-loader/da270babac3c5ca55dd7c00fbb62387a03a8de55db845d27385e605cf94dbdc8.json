{"ast":null,"code":"var _jsxFileName = \"/Users/borvel/Documents/GitHub/places-app/src/components/Map/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { styled } from 'styled-components';\n\n// Fix for default icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  will-change: transform;\n  transform: translateZ(0);\n  backface-visibility: hidden;\n  perspective: 1000px;\n`;\n\n// Расширяем интерфейс MapOptions для поддержки дополнительных свойств\n_c = MapContainer;\nconst createPopupContent = place => `\n  <div class=\"place-card\">\n    <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" style=\"width: 100%; height: 200px; object-fit: cover;\" />\n    <div class=\"place-content\" style=\"padding: 15px;\">\n      <h3 style=\"margin: 0; font-size: 18px;\">${place.name}</h3>\n      <p style=\"margin: 10px 0; font-size: 14px;\">${place.description}</p>\n      <div class=\"place-links-social\" style=\"margin-top: 10px;\">\n        ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n        ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n      </div>\n    </div>\n  </div>\n`;\nexport const Map = ({\n  places,\n  config,\n  onMarkerClick,\n  selectedPlace,\n  mapRef,\n  onShowNearby,\n  onLoadingComplete\n}) => {\n  _s();\n  const markersRef = useRef(null);\n  const activeMarkerRef = useRef(null);\n  const containerRef = useRef(null);\n  const mobilePopupRef = useRef(null);\n\n  // Создаем мобильный попап\n  useEffect(() => {\n    if (!mobilePopupRef.current) {\n      const popupDiv = document.createElement('div');\n      popupDiv.className = 'map-popup-mobile';\n      document.body.appendChild(popupDiv);\n      mobilePopupRef.current = popupDiv;\n      return () => {\n        document.body.removeChild(popupDiv);\n        mobilePopupRef.current = null;\n      };\n    }\n  }, []);\n  const showMobilePopup = useCallback(place => {\n    if (!mobilePopupRef.current) return;\n    const popupContent = `\n      <div class=\"place-card\">\n        <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" />\n        <div class=\"place-content\">\n          <h3>${place.name}</h3>\n          <p>${place.description}</p>\n          <div class=\"place-links-social\">\n            ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" /></a>` : ''}\n            ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" /></a>` : ''}\n          </div>\n        </div>\n        <button class=\"close-btn-mobile\">×</button>\n      </div>\n    `;\n    mobilePopupRef.current.innerHTML = popupContent;\n    mobilePopupRef.current.classList.add('active');\n    const closeBtn = mobilePopupRef.current.querySelector('.close-btn-mobile');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => {\n        if (mobilePopupRef.current) {\n          mobilePopupRef.current.classList.remove('active');\n          if (activeMarkerRef.current) {\n            activeMarkerRef.current.setIcon(createDefaultIcon());\n            activeMarkerRef.current = null;\n          }\n        }\n      });\n    }\n  }, []);\n  const createDefaultIcon = useCallback(() => {\n    console.log('Creating default icon');\n    return L.divIcon({\n      className: 'marker-default',\n      iconSize: [30, 30],\n      iconAnchor: [15, 15],\n      html: '<div></div>'\n    });\n  }, []);\n  const createCustomIcon = useCallback(() => {\n    console.log('Creating custom icon');\n    return L.divIcon({\n      className: 'marker-active',\n      iconSize: [30, 40],\n      iconAnchor: [15, 40],\n      popupAnchor: [0, -40],\n      html: '<div></div>'\n    });\n  }, []);\n  const createMarkerClusterGroup = useCallback(() => {\n    console.log('Creating marker cluster group with settings:', config.mapSettings.clusterSettings);\n    return L.markerClusterGroup({\n      iconCreateFunction: cluster => {\n        const count = cluster.getChildCount();\n        return L.divIcon({\n          html: `<div class=\"cluster-icon\">${count}</div>`,\n          className: 'marker-cluster',\n          iconSize: L.point(40, 40)\n        });\n      },\n      disableClusteringAtZoom: config.mapSettings.clusterSettings.disableClusteringAtZoom,\n      spiderfyOnMaxZoom: false,\n      maxClusterRadius: config.mapSettings.clusterSettings.maxClusterRadius,\n      zoomToBoundsOnClick: false,\n      showCoverageOnHover: false,\n      animate: true,\n      animateAddingMarkers: false\n    });\n  }, [config.mapSettings.clusterSettings]);\n  const updateMarkers = useCallback(() => {\n    console.log('Updating markers');\n    if (!mapRef.current || !markersRef.current) return;\n    markersRef.current.clearLayers();\n    const defaultIcon = createDefaultIcon();\n    const customIcon = createCustomIcon();\n    places.forEach(place => {\n      var _markersRef$current;\n      const marker = L.marker([place.lat, place.lng], {\n        icon: defaultIcon,\n        riseOnHover: true,\n        riseOffset: 250\n      });\n      if (window.innerWidth > 768) {\n        const popup = L.popup({\n          maxWidth: 500,\n          className: 'place-popup',\n          closeButton: true,\n          closeOnClick: false,\n          autoPan: true,\n          autoPanPadding: [50, 50]\n        }).setContent(createPopupContent(place));\n        marker.bindPopup(popup);\n      }\n      marker.bindTooltip(place.name, {\n        permanent: false,\n        direction: 'bottom',\n        offset: [0, 5],\n        className: 'place-label',\n        opacity: 0\n      });\n      marker.on('click', () => {\n        console.log('Marker clicked:', place.name);\n        if (activeMarkerRef.current && activeMarkerRef.current !== marker) {\n          activeMarkerRef.current.setIcon(defaultIcon);\n          if (window.innerWidth > 768) {\n            activeMarkerRef.current.closePopup();\n          }\n        }\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n        onMarkerClick(place);\n      });\n      (_markersRef$current = markersRef.current) === null || _markersRef$current === void 0 ? void 0 : _markersRef$current.addLayer(marker);\n      if (selectedPlace && selectedPlace.name === place.name) {\n        console.log('Setting active marker for selected place:', place.name);\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n      }\n    });\n\n    // Добавляем обработчик клика на кластер\n    markersRef.current.on('clusterclick', e => {\n      const cluster = e.layer;\n      const childMarkers = cluster.getAllChildMarkers();\n      if (childMarkers.length === 1) {\n        childMarkers[0].fire('click');\n      } else {\n        var _mapRef$current;\n        (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.setView(cluster.getLatLng(), 16, {\n          animate: true\n        });\n      }\n    });\n    const updateTooltipsVisibility = () => {\n      var _mapRef$current2, _markersRef$current2;\n      const zoom = (_mapRef$current2 = mapRef.current) === null || _mapRef$current2 === void 0 ? void 0 : _mapRef$current2.getZoom();\n      console.log('Current zoom level:', zoom);\n      if (!zoom) return;\n      (_markersRef$current2 = markersRef.current) === null || _markersRef$current2 === void 0 ? void 0 : _markersRef$current2.getLayers().forEach(layer => {\n        const marker = layer;\n        const tooltip = marker.getTooltip();\n        if (tooltip) {\n          if (zoom >= 15) {\n            tooltip.setOpacity(1);\n          } else {\n            tooltip.setOpacity(0);\n          }\n        }\n      });\n    };\n    mapRef.current.on('zoomend', updateTooltipsVisibility);\n    updateTooltipsVisibility();\n  }, [places, selectedPlace, createDefaultIcon, createCustomIcon, onMarkerClick, showMobilePopup]);\n  const handleShowNearby = useCallback(() => {\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by your browser');\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(position => {\n      const userLat = position.coords.latitude;\n      const userLng = position.coords.longitude;\n\n      // Центрируем карту по координатам пользователя\n      if (mapRef.current) {\n        mapRef.current.setView([userLat, userLng], 16, {\n          animate: true,\n          duration: 0.5\n        });\n\n        // Устанавливаем маркер с кастомной иконкой\n        const userMarker = L.marker([userLat, userLng], {\n          icon: L.icon({\n            iconUrl: '/data/images/pin.svg',\n            iconSize: [30, 40],\n            iconAnchor: [15, 40]\n          })\n        }).addTo(mapRef.current);\n\n        // Очищаем предыдущий активный маркер, если он есть\n        if (activeMarkerRef.current) {\n          mapRef.current.removeLayer(activeMarkerRef.current);\n        }\n        activeMarkerRef.current = userMarker;\n      }\n\n      // Сообщаем о завершении загрузки\n      if (onLoadingComplete) {\n        onLoadingComplete();\n      }\n    }, error => {\n      console.error('Error getting location:', error);\n      alert('Unable to get your location');\n      // Сообщаем о завершении загрузки даже при ошибке\n      if (onLoadingComplete) {\n        onLoadingComplete();\n      }\n    });\n  }, [mapRef, onLoadingComplete]);\n  useEffect(() => {\n    console.log('Initializing map');\n    if (!containerRef.current || mapRef.current) return;\n    const map = L.map(containerRef.current, {\n      center: config.mapSettings.center,\n      zoom: config.mapSettings.initialZoom,\n      scrollWheelZoom: true,\n      closePopupOnClick: true,\n      tap: true,\n      attributionControl: false,\n      zoomControl: false,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2\n    });\n    L.tileLayer(config.mapSettings.tileLayer.url, {\n      attribution: config.mapSettings.tileLayer.attribution,\n      subdomains: config.mapSettings.tileLayer.subdomains,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2,\n      preferCanvas: true\n    }).addTo(map);\n    L.control.attribution({\n      position: 'bottomright',\n      prefix: false\n    }).addTo(map);\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(map);\n    mapRef.current = map;\n    markersRef.current = createMarkerClusterGroup();\n    map.addLayer(markersRef.current);\n    const handleResize = () => {\n      console.log('Window resized, updating map size');\n      map.invalidateSize({\n        animate: false,\n        pan: false\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('orientationchange', handleResize);\n    setTimeout(handleResize, 100);\n    return () => {\n      console.log('Cleaning up map');\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('orientationchange', handleResize);\n      map.remove();\n      mapRef.current = null;\n      markersRef.current = null;\n    };\n  }, [config, createMarkerClusterGroup]);\n  useEffect(() => {\n    if (mapRef.current && markersRef.current) {\n      console.log('Updating markers after dependency change');\n      updateMarkers();\n    }\n  }, [updateMarkers]);\n  useEffect(() => {\n    if (mapRef.current && selectedPlace) {\n      console.log(`Setting view for selected place: ${selectedPlace.name}`);\n      const map = mapRef.current;\n      setTimeout(() => {\n        map.setView([selectedPlace.lat, selectedPlace.lng], 16, {\n          animate: true,\n          duration: 0.5\n        });\n      }, 100);\n    }\n  }, [selectedPlace]);\n\n  // Предоставляем функцию через callback только для мобильных устройств\n  useEffect(() => {\n    // Проверяем, что мы на мобильном устройстве и онлайн-коллбэк доступен\n    if (onShowNearby && window.innerWidth <= 768) {\n      onShowNearby(handleShowNearby);\n    }\n\n    // Обрабатываем изменение размера окна\n    const handleResize = () => {\n      if (onShowNearby) {\n        if (window.innerWidth <= 768) {\n          onShowNearby(handleShowNearby);\n        } else {\n          // Если не мобильное устройство, передаем пустую функцию\n          onShowNearby(() => {});\n        }\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (onShowNearby) {\n        onShowNearby(() => {});\n      }\n    };\n  }, [onShowNearby, handleShowNearby]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 10\n  }, this);\n};\n_s(Map, \"XEdLfVDwU//34Dsq5reT0o1BUb4=\");\n_c2 = Map;\nexport default Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapContainer\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","L","styled","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapContainer","div","_c","createPopupContent","place","image","name","description","instagram","maps_url","Map","places","config","onMarkerClick","selectedPlace","mapRef","onShowNearby","onLoadingComplete","_s","markersRef","activeMarkerRef","containerRef","mobilePopupRef","current","popupDiv","document","createElement","className","body","appendChild","removeChild","showMobilePopup","popupContent","innerHTML","classList","add","closeBtn","querySelector","addEventListener","remove","setIcon","createDefaultIcon","console","log","divIcon","iconSize","iconAnchor","html","createCustomIcon","popupAnchor","createMarkerClusterGroup","mapSettings","clusterSettings","markerClusterGroup","iconCreateFunction","cluster","count","getChildCount","point","disableClusteringAtZoom","spiderfyOnMaxZoom","maxClusterRadius","zoomToBoundsOnClick","showCoverageOnHover","animate","animateAddingMarkers","updateMarkers","clearLayers","defaultIcon","customIcon","forEach","_markersRef$current","marker","lat","lng","icon","riseOnHover","riseOffset","window","innerWidth","popup","maxWidth","closeButton","closeOnClick","autoPan","autoPanPadding","setContent","bindPopup","bindTooltip","permanent","direction","offset","opacity","on","closePopup","openPopup","addLayer","e","layer","childMarkers","getAllChildMarkers","length","fire","_mapRef$current","setView","getLatLng","updateTooltipsVisibility","_mapRef$current2","_markersRef$current2","zoom","getZoom","getLayers","tooltip","getTooltip","setOpacity","handleShowNearby","navigator","geolocation","alert","getCurrentPosition","position","userLat","coords","latitude","userLng","longitude","duration","userMarker","addTo","removeLayer","error","map","center","initialZoom","scrollWheelZoom","closePopupOnClick","tap","attributionControl","zoomControl","maxZoom","minZoom","tileLayer","url","attribution","subdomains","preferCanvas","control","prefix","handleResize","invalidateSize","pan","setTimeout","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/borvel/Documents/GitHub/places-app/src/components/Map/Map.tsx"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { Place, AppConfig } from '../../types/places';\nimport { styled } from 'styled-components';\n\n// Fix for default icon\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\ninterface MapProps {\n  places: Place[];\n  config: AppConfig;\n  onMarkerClick: (place: Place) => void;\n  selectedPlace?: Place | null;\n  mapRef: React.MutableRefObject<L.Map | null>;\n  onShowNearby?: (handler: () => void) => void;\n  onLoadingComplete?: () => void;\n}\n\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  will-change: transform;\n  transform: translateZ(0);\n  backface-visibility: hidden;\n  perspective: 1000px;\n`;\n\n// Расширяем интерфейс MapOptions для поддержки дополнительных свойств\ndeclare module 'leaflet' {\n  interface MapOptions {\n    tap?: boolean;\n  }\n  \n  interface TileLayerOptions {\n    preferCanvas?: boolean;\n  }\n}\n\nconst createPopupContent = (place: Place) => `\n  <div class=\"place-card\">\n    <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" style=\"width: 100%; height: 200px; object-fit: cover;\" />\n    <div class=\"place-content\" style=\"padding: 15px;\">\n      <h3 style=\"margin: 0; font-size: 18px;\">${place.name}</h3>\n      <p style=\"margin: 10px 0; font-size: 14px;\">${place.description}</p>\n      <div class=\"place-links-social\" style=\"margin-top: 10px;\">\n        ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n        ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n      </div>\n    </div>\n  </div>\n`;\n\nexport const Map: React.FC<MapProps> = ({ places, config, onMarkerClick, selectedPlace, mapRef, onShowNearby, onLoadingComplete }) => {\n  const markersRef = useRef<L.MarkerClusterGroup | null>(null);\n  const activeMarkerRef = useRef<L.Marker | null>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const mobilePopupRef = useRef<HTMLDivElement | null>(null);\n\n  // Создаем мобильный попап\n  useEffect(() => {\n    if (!mobilePopupRef.current) {\n      const popupDiv = document.createElement('div');\n      popupDiv.className = 'map-popup-mobile';\n      document.body.appendChild(popupDiv);\n      mobilePopupRef.current = popupDiv;\n\n      return () => {\n        document.body.removeChild(popupDiv);\n        mobilePopupRef.current = null;\n      };\n    }\n  }, []);\n\n  const showMobilePopup = useCallback((place: Place) => {\n    if (!mobilePopupRef.current) return;\n\n    const popupContent = `\n      <div class=\"place-card\">\n        <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" />\n        <div class=\"place-content\">\n          <h3>${place.name}</h3>\n          <p>${place.description}</p>\n          <div class=\"place-links-social\">\n            ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" /></a>` : ''}\n            ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" /></a>` : ''}\n          </div>\n        </div>\n        <button class=\"close-btn-mobile\">×</button>\n      </div>\n    `;\n\n    mobilePopupRef.current.innerHTML = popupContent;\n    mobilePopupRef.current.classList.add('active');\n\n    const closeBtn = mobilePopupRef.current.querySelector('.close-btn-mobile');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => {\n        if (mobilePopupRef.current) {\n          mobilePopupRef.current.classList.remove('active');\n          if (activeMarkerRef.current) {\n            activeMarkerRef.current.setIcon(createDefaultIcon());\n            activeMarkerRef.current = null;\n          }\n        }\n      });\n    }\n  }, []);\n\n  const createDefaultIcon = useCallback(() => {\n    console.log('Creating default icon');\n    return L.divIcon({\n      className: 'marker-default',\n      iconSize: [30, 30],\n      iconAnchor: [15, 15],\n      html: '<div></div>'\n    });\n  }, []);\n\n  const createCustomIcon = useCallback(() => {\n    console.log('Creating custom icon');\n    return L.divIcon({\n      className: 'marker-active',\n      iconSize: [30, 40],\n      iconAnchor: [15, 40],\n      popupAnchor: [0, -40],\n      html: '<div></div>'\n    });\n  }, []);\n\n  const createMarkerClusterGroup = useCallback(() => {\n    console.log('Creating marker cluster group with settings:', config.mapSettings.clusterSettings);\n    return L.markerClusterGroup({\n      iconCreateFunction: (cluster: L.MarkerCluster) => {\n        const count = cluster.getChildCount();\n        return L.divIcon({\n          html: `<div class=\"cluster-icon\">${count}</div>`,\n          className: 'marker-cluster',\n          iconSize: L.point(40, 40)\n        });\n      },\n      disableClusteringAtZoom: config.mapSettings.clusterSettings.disableClusteringAtZoom,\n      spiderfyOnMaxZoom: false,\n      maxClusterRadius: config.mapSettings.clusterSettings.maxClusterRadius,\n      zoomToBoundsOnClick: false,\n      showCoverageOnHover: false,\n      animate: true,\n      animateAddingMarkers: false\n    });\n  }, [config.mapSettings.clusterSettings]);\n\n  const updateMarkers = useCallback(() => {\n    console.log('Updating markers');\n    if (!mapRef.current || !markersRef.current) return;\n\n    markersRef.current.clearLayers();\n    const defaultIcon = createDefaultIcon();\n    const customIcon = createCustomIcon();\n\n    places.forEach(place => {\n      const marker = L.marker([place.lat, place.lng], { \n        icon: defaultIcon,\n        riseOnHover: true,\n        riseOffset: 250\n      });\n\n      if (window.innerWidth > 768) {\n        const popup = L.popup({\n          maxWidth: 500,\n          className: 'place-popup',\n          closeButton: true,\n          closeOnClick: false,\n          autoPan: true,\n          autoPanPadding: [50, 50]\n        }).setContent(createPopupContent(place));\n\n        marker.bindPopup(popup);\n      }\n\n      marker.bindTooltip(place.name, {\n        permanent: false,\n        direction: 'bottom',\n        offset: [0, 5],\n        className: 'place-label',\n        opacity: 0\n      });\n\n      marker.on('click', () => {\n        console.log('Marker clicked:', place.name);\n        \n        if (activeMarkerRef.current && activeMarkerRef.current !== marker) {\n          activeMarkerRef.current.setIcon(defaultIcon);\n          if (window.innerWidth > 768) {\n            activeMarkerRef.current.closePopup();\n          }\n        }\n\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n\n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n\n        onMarkerClick(place);\n      });\n\n      markersRef.current?.addLayer(marker);\n\n      if (selectedPlace && selectedPlace.name === place.name) {\n        console.log('Setting active marker for selected place:', place.name);\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n        \n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n      }\n    });\n\n    // Добавляем обработчик клика на кластер\n    markersRef.current.on('clusterclick', (e: L.LeafletEvent) => {\n      const cluster = e.layer as L.MarkerCluster;\n      const childMarkers = cluster.getAllChildMarkers();\n\n      if (childMarkers.length === 1) {\n        childMarkers[0].fire('click');\n      } else {\n        mapRef.current?.setView(cluster.getLatLng(), 16, { animate: true });\n      }\n    });\n\n    const updateTooltipsVisibility = () => {\n      const zoom = mapRef.current?.getZoom();\n      console.log('Current zoom level:', zoom);\n      if (!zoom) return;\n\n      markersRef.current?.getLayers().forEach((layer) => {\n        const marker = layer as L.Marker;\n        const tooltip = marker.getTooltip();\n        if (tooltip) {\n          if (zoom >= 15) {\n            tooltip.setOpacity(1);\n          } else {\n            tooltip.setOpacity(0);\n          }\n        }\n      });\n    };\n\n    mapRef.current.on('zoomend', updateTooltipsVisibility);\n    updateTooltipsVisibility();\n  }, [places, selectedPlace, createDefaultIcon, createCustomIcon, onMarkerClick, showMobilePopup]);\n\n  const handleShowNearby = useCallback(() => {\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by your browser');\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        const userLat = position.coords.latitude;\n        const userLng = position.coords.longitude;\n\n        // Центрируем карту по координатам пользователя\n        if (mapRef.current) {\n          mapRef.current.setView([userLat, userLng], 16, {\n            animate: true,\n            duration: 0.5\n          });\n\n          // Устанавливаем маркер с кастомной иконкой\n          const userMarker = L.marker([userLat, userLng], {\n            icon: L.icon({\n              iconUrl: '/data/images/pin.svg',\n              iconSize: [30, 40],\n              iconAnchor: [15, 40]\n            })\n          }).addTo(mapRef.current);\n\n          // Очищаем предыдущий активный маркер, если он есть\n          if (activeMarkerRef.current) {\n            mapRef.current.removeLayer(activeMarkerRef.current);\n          }\n          activeMarkerRef.current = userMarker;\n        }\n\n        // Сообщаем о завершении загрузки\n        if (onLoadingComplete) {\n          onLoadingComplete();\n        }\n      },\n      error => {\n        console.error('Error getting location:', error);\n        alert('Unable to get your location');\n        // Сообщаем о завершении загрузки даже при ошибке\n        if (onLoadingComplete) {\n          onLoadingComplete();\n        }\n      }\n    );\n  }, [mapRef, onLoadingComplete]);\n\n  useEffect(() => {\n    console.log('Initializing map');\n    if (!containerRef.current || mapRef.current) return;\n\n    const map = L.map(containerRef.current, {\n      center: config.mapSettings.center,\n      zoom: config.mapSettings.initialZoom,\n      scrollWheelZoom: true,\n      closePopupOnClick: true,\n      tap: true,\n      attributionControl: false,\n      zoomControl: false,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2\n    });\n\n    L.tileLayer(config.mapSettings.tileLayer.url, {\n      attribution: config.mapSettings.tileLayer.attribution,\n      subdomains: config.mapSettings.tileLayer.subdomains,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2,\n      preferCanvas: true\n    }).addTo(map);\n\n    L.control.attribution({\n      position: 'bottomright',\n      prefix: false\n    }).addTo(map);\n\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(map);\n\n    mapRef.current = map;\n    markersRef.current = createMarkerClusterGroup();\n    map.addLayer(markersRef.current);\n\n    const handleResize = () => {\n      console.log('Window resized, updating map size');\n      map.invalidateSize({ animate: false, pan: false });\n    };\n\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('orientationchange', handleResize);\n\n    setTimeout(handleResize, 100);\n\n    return () => {\n      console.log('Cleaning up map');\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('orientationchange', handleResize);\n      map.remove();\n      mapRef.current = null;\n      markersRef.current = null;\n    };\n  }, [config, createMarkerClusterGroup]);\n\n  useEffect(() => {\n    if (mapRef.current && markersRef.current) {\n      console.log('Updating markers after dependency change');\n      updateMarkers();\n    }\n  }, [updateMarkers]);\n\n  useEffect(() => {\n    if (mapRef.current && selectedPlace) {\n      console.log(`Setting view for selected place: ${selectedPlace.name}`);\n      const map = mapRef.current;\n      setTimeout(() => {\n        map.setView([selectedPlace.lat, selectedPlace.lng], 16, {\n          animate: true,\n          duration: 0.5\n        });\n      }, 100);\n    }\n  }, [selectedPlace]);\n\n  // Предоставляем функцию через callback только для мобильных устройств\n  useEffect(() => {\n    // Проверяем, что мы на мобильном устройстве и онлайн-коллбэк доступен\n    if (onShowNearby && window.innerWidth <= 768) {\n      onShowNearby(handleShowNearby);\n    }\n    \n    // Обрабатываем изменение размера окна\n    const handleResize = () => {\n      if (onShowNearby) {\n        if (window.innerWidth <= 768) {\n          onShowNearby(handleShowNearby);\n        } else {\n          // Если не мобильное устройство, передаем пустую функцию\n          onShowNearby(() => {});\n        }\n      }\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (onShowNearby) {\n        onShowNearby(() => {});\n      }\n    };\n  }, [onShowNearby, handleShowNearby]);\n\n  return <MapContainer ref={containerRef} />;\n};\n\nexport default Map; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}