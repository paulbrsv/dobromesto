{"ast":null,"code":"var _jsxFileName = \"/Users/borvel/Documents/GitHub/places-app/src/components/Map/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { styled } from 'styled-components';\n\n// Fix for default icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  will-change: transform;\n  transform: translateZ(0);\n  backface-visibility: hidden;\n  perspective: 1000px;\n`;\n\n// Расширяем интерфейс MapOptions для поддержки дополнительных свойств\n_c = MapContainer;\nconst createPopupContent = place => `\n  <div class=\"place-card\">\n    <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" style=\"width: 100%; height: 200px; object-fit: cover;\" />\n    <div class=\"place-content\" style=\"padding: 15px;\">\n      <h3 style=\"margin: 0; font-size: 18px;\">${place.name}</h3>\n      <p style=\"margin: 10px 0; font-size: 14px;\">${place.description}</p>\n      <div class=\"place-links-social\" style=\"margin-top: 10px;\">\n        ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n        ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n      </div>\n    </div>\n  </div>\n`;\nexport const Map = ({\n  places,\n  config,\n  onMarkerClick,\n  selectedPlace,\n  mapRef,\n  onPopupClose,\n  onBoundsChange\n}) => {\n  _s();\n  const markersRef = useRef(null);\n  const activeMarkerRef = useRef(null);\n  const containerRef = useRef(null);\n  const mobilePopupRef = useRef(null);\n  // Флаг для отслеживания программного закрытия попапа\n  const isProgrammaticClose = useRef(false);\n  // Флаг для отслеживания первой установки границ\n  const isInitialBoundsSet = useRef(false);\n  // Храним ссылку на функцию обратного вызова на верхнем уровне\n  const onBoundsChangeRef = useRef(onBoundsChange);\n\n  // Обновляем ссылку при изменении функции\n  useEffect(() => {\n    onBoundsChangeRef.current = onBoundsChange;\n  }, [onBoundsChange]);\n\n  // Создаем мобильный попап\n  useEffect(() => {\n    if (!mobilePopupRef.current) {\n      const popupDiv = document.createElement('div');\n      popupDiv.className = 'map-popup-mobile';\n      document.body.appendChild(popupDiv);\n      mobilePopupRef.current = popupDiv;\n      return () => {\n        document.body.removeChild(popupDiv);\n        mobilePopupRef.current = null;\n      };\n    }\n  }, []);\n  const showMobilePopup = useCallback(place => {\n    if (!mobilePopupRef.current) return;\n    const popupContent = `\n      <div class=\"place-card\">\n        <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" />\n        <div class=\"place-content\">\n          <h3>${place.name}</h3>\n          <p>${place.description}</p>\n          <div class=\"place-links-social\">\n            ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" /></a>` : ''}\n            ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" /></a>` : ''}\n          </div>\n        </div>\n        <button class=\"close-btn-mobile\">×</button>\n      </div>\n    `;\n    mobilePopupRef.current.innerHTML = popupContent;\n    mobilePopupRef.current.classList.add('active');\n    const closeBtn = mobilePopupRef.current.querySelector('.close-btn-mobile');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => {\n        if (mobilePopupRef.current) {\n          mobilePopupRef.current.classList.remove('active');\n          if (activeMarkerRef.current) {\n            activeMarkerRef.current.setIcon(createDefaultIcon());\n            activeMarkerRef.current = null;\n          }\n\n          // Сообщаем, что попап закрыт, чтобы сбросить selectedPlace\n          if (onPopupClose) {\n            onPopupClose();\n          }\n        }\n      });\n    }\n  }, [onPopupClose]);\n  const createDefaultIcon = useCallback(() => {\n    console.log('Creating default icon');\n    return L.divIcon({\n      className: 'marker-default',\n      iconSize: [30, 30],\n      iconAnchor: [15, 15],\n      html: '<div></div>'\n    });\n  }, []);\n  const createCustomIcon = useCallback(() => {\n    console.log('Creating custom icon');\n    return L.divIcon({\n      className: 'marker-active',\n      iconSize: [30, 40],\n      iconAnchor: [15, 40],\n      popupAnchor: [0, -40],\n      html: '<div></div>'\n    });\n  }, []);\n  const createMarkerClusterGroup = useCallback(() => {\n    console.log('Creating marker cluster group with settings:', config.mapSettings.clusterSettings);\n    return L.markerClusterGroup({\n      iconCreateFunction: cluster => {\n        const count = cluster.getChildCount();\n        return L.divIcon({\n          html: `<div class=\"cluster-icon\">${count}</div>`,\n          className: 'marker-cluster',\n          iconSize: L.point(40, 40)\n        });\n      },\n      disableClusteringAtZoom: config.mapSettings.clusterSettings.disableClusteringAtZoom,\n      spiderfyOnMaxZoom: false,\n      maxClusterRadius: config.mapSettings.clusterSettings.maxClusterRadius,\n      zoomToBoundsOnClick: false,\n      showCoverageOnHover: false,\n      animate: true,\n      animateAddingMarkers: false\n    });\n  }, [config.mapSettings.clusterSettings]);\n  const updateMarkers = useCallback(() => {\n    console.log('Updating markers');\n    if (!mapRef.current || !markersRef.current) return;\n\n    // Очищаем все слои, включая предыдущие маркеры\n    markersRef.current.clearLayers();\n\n    // Сбрасываем активный маркер\n    activeMarkerRef.current = null;\n    const defaultIcon = createDefaultIcon();\n    const customIcon = createCustomIcon();\n\n    // Создаем маркеры с tooltips\n    const markers = [];\n    places.forEach(place => {\n      var _markersRef$current;\n      const marker = L.marker([place.lat, place.lng], {\n        icon: defaultIcon,\n        riseOnHover: true,\n        riseOffset: 250\n      });\n      if (window.innerWidth > 768) {\n        const popup = L.popup({\n          maxWidth: 500,\n          className: 'place-popup',\n          closeButton: true,\n          closeOnClick: false,\n          autoPan: true,\n          autoPanPadding: [50, 50]\n        }).setContent(createPopupContent(place));\n        marker.bindPopup(popup);\n      }\n\n      // Создаем tooltip и делаем его невидимым по умолчанию\n      marker.bindTooltip(place.name, {\n        permanent: true,\n        direction: 'bottom',\n        offset: [0, 5],\n        className: 'place-label',\n        opacity: 0\n      });\n\n      // Добавляем место в данные маркера для доступа в дальнейшем\n      marker.place = place;\n      marker.on('click', () => {\n        var _mapRef$current, _mapRef$current2;\n        console.log('Marker clicked:', place.name);\n\n        // При клике на тот же маркер, отменяем выбор\n        if (activeMarkerRef.current === marker) {\n          marker.setIcon(defaultIcon);\n          if (window.innerWidth > 768) {\n            isProgrammaticClose.current = true;\n            marker.closePopup();\n          }\n          activeMarkerRef.current = null;\n          onMarkerClick(place); // Передаем повторный клик для отмены выбора\n          return;\n        }\n\n        // При клике на другой маркер\n        if (activeMarkerRef.current && activeMarkerRef.current !== marker) {\n          activeMarkerRef.current.setIcon(defaultIcon);\n          if (window.innerWidth > 768) {\n            isProgrammaticClose.current = true;\n            activeMarkerRef.current.closePopup();\n          }\n        }\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n\n        // Центрируем карту с проверкой зума\n        const currentZoom = ((_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.getZoom()) || 0;\n        const targetZoom = currentZoom >= 16 ? currentZoom : 16;\n        (_mapRef$current2 = mapRef.current) === null || _mapRef$current2 === void 0 ? void 0 : _mapRef$current2.setView(marker.getLatLng(), targetZoom, {\n          animate: true,\n          duration: 0.5\n        });\n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n        onMarkerClick(place);\n      });\n      markers.push(marker);\n      (_markersRef$current = markersRef.current) === null || _markersRef$current === void 0 ? void 0 : _markersRef$current.addLayer(marker);\n\n      // Устанавливаем активный маркер для выбранного места\n      if (selectedPlace && selectedPlace.name === place.name) {\n        console.log('Setting active marker for selected place:', place.name);\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n      }\n    });\n\n    // Функция для проверки наложения меток\n    const shouldShowLabel = (marker, visibleMarkers) => {\n      var _mapRef$current3;\n      // Одиночные метки всегда показываем\n      if (visibleMarkers.length <= 1) return true;\n      const markerPoint = (_mapRef$current3 = mapRef.current) === null || _mapRef$current3 === void 0 ? void 0 : _mapRef$current3.latLngToContainerPoint(marker.getLatLng());\n      if (!markerPoint) return false;\n\n      // Минимальное расстояние между метками в пикселях\n      const minDistance = 100;\n\n      // Проверяем расстояние до других видимых меток\n      for (const otherMarker of visibleMarkers) {\n        var _mapRef$current4;\n        if (marker === otherMarker) continue;\n        const otherPoint = (_mapRef$current4 = mapRef.current) === null || _mapRef$current4 === void 0 ? void 0 : _mapRef$current4.latLngToContainerPoint(otherMarker.getLatLng());\n        if (!otherPoint) continue;\n        const distance = markerPoint.distanceTo(otherPoint);\n        if (distance < minDistance) {\n          var _mapRef$current5, _mapRef$current6;\n          // Если метки слишком близко, показываем только ту, что ближе к центру экрана\n          const center = (_mapRef$current5 = mapRef.current) === null || _mapRef$current5 === void 0 ? void 0 : _mapRef$current5.getCenter();\n          if (!center) continue;\n          const centerPoint = (_mapRef$current6 = mapRef.current) === null || _mapRef$current6 === void 0 ? void 0 : _mapRef$current6.latLngToContainerPoint(center);\n          if (!centerPoint) continue;\n          const distToCenter = markerPoint.distanceTo(centerPoint);\n          const otherDistToCenter = otherPoint.distanceTo(centerPoint);\n\n          // Если эта метка дальше от центра, скрываем её\n          if (distToCenter > otherDistToCenter) {\n            return false;\n          }\n        }\n      }\n      return true;\n    };\n\n    // Обновляем видимость названий меток при изменении зума или видимых маркеров\n    const updateLabelsVisibility = () => {\n      if (!mapRef.current || !markersRef.current) return;\n      const zoom = mapRef.current.getZoom();\n      const allMarkers = markers;\n\n      // Для небольшого зума скрываем все названия\n      if (zoom < 14) {\n        allMarkers.forEach(marker => {\n          const tooltip = marker.getTooltip();\n          if (tooltip) tooltip.setOpacity(0);\n        });\n        return;\n      }\n\n      // Получаем все маркеры, которые видны на экране (не в кластерах)\n      const visibleMarkers = [];\n      allMarkers.forEach(marker => {\n        var _markersRef$current2;\n        // Проверяем, является ли родитель маркера кластером\n        const parent = (_markersRef$current2 = markersRef.current) === null || _markersRef$current2 === void 0 ? void 0 : _markersRef$current2.getVisibleParent(marker);\n        if (parent === marker) {\n          visibleMarkers.push(marker);\n        }\n      });\n\n      // Обновляем видимость для каждого видимого маркера\n      visibleMarkers.forEach(marker => {\n        const tooltip = marker.getTooltip();\n        if (!tooltip) return;\n        if (shouldShowLabel(marker, visibleMarkers)) {\n          tooltip.setOpacity(1);\n        } else {\n          tooltip.setOpacity(0);\n        }\n      });\n\n      // Скрываем названия для маркеров в кластерах\n      allMarkers.forEach(marker => {\n        if (!visibleMarkers.includes(marker)) {\n          const tooltip = marker.getTooltip();\n          if (tooltip) tooltip.setOpacity(0);\n        }\n      });\n    };\n\n    // Добавляем обработчик клика на кластер\n    markersRef.current.on('clusterclick', e => {\n      const cluster = e.layer;\n      const childMarkers = cluster.getAllChildMarkers();\n      if (childMarkers.length === 1) {\n        childMarkers[0].fire('click');\n      } else {\n        var _mapRef$current7;\n        (_mapRef$current7 = mapRef.current) === null || _mapRef$current7 === void 0 ? void 0 : _mapRef$current7.setView(cluster.getLatLng(), 16, {\n          animate: true\n        });\n      }\n\n      // Обновляем видимость названий после раскрытия кластера\n      setTimeout(updateLabelsVisibility, 300);\n    });\n\n    // События, при которых нужно обновлять видимость названий\n    mapRef.current.on('zoomend', updateLabelsVisibility);\n    mapRef.current.on('moveend', updateLabelsVisibility);\n    markersRef.current.on('animationend', updateLabelsVisibility);\n\n    // Обновляем сразу после создания маркеров\n    setTimeout(updateLabelsVisibility, 100);\n  }, [places, selectedPlace, createDefaultIcon, createCustomIcon, onMarkerClick, showMobilePopup]);\n  useEffect(() => {\n    console.log('Initializing map');\n    if (!containerRef.current || mapRef.current) return;\n    const map = L.map(containerRef.current, {\n      center: config.mapSettings.center,\n      zoom: config.mapSettings.initialZoom,\n      scrollWheelZoom: true,\n      closePopupOnClick: true,\n      tap: false,\n      attributionControl: false,\n      zoomControl: false,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2,\n      bounceAtZoomLimits: false,\n      inertia: false\n    });\n    L.tileLayer(config.mapSettings.tileLayer.url, {\n      attribution: config.mapSettings.tileLayer.attribution,\n      subdomains: config.mapSettings.tileLayer.subdomains,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2,\n      preferCanvas: true\n    }).addTo(map);\n    L.control.attribution({\n      position: 'bottomright',\n      prefix: false\n    }).addTo(map);\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(map);\n    mapRef.current = map;\n    markersRef.current = createMarkerClusterGroup();\n    map.addLayer(markersRef.current);\n\n    // Добавляем глобальный обработчик touchmove для предотвращения скроллинга страницы\n    // при взаимодействии с картой\n    const preventDefaultTouchMoveOnMap = e => {\n      if (e.target && e.target.closest('.leaflet-container')) {\n        e.preventDefault();\n      }\n    };\n\n    // Добавляем обработчик на уровне документа с passive: false,\n    // чтобы иметь возможность вызывать preventDefault()\n    document.addEventListener('touchmove', preventDefaultTouchMoveOnMap, {\n      passive: false\n    });\n    const handleResize = () => {\n      console.log('Window resized, updating map size');\n      map.invalidateSize({\n        animate: false,\n        pan: false\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('orientationchange', handleResize);\n\n    // Используем явный window.setTimeout для избежания проблем с асинхронностью\n    window.setTimeout(handleResize, 100);\n    return () => {\n      console.log('Cleaning up map');\n      document.removeEventListener('touchmove', preventDefaultTouchMoveOnMap);\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('orientationchange', handleResize);\n      map.remove();\n      mapRef.current = null;\n      markersRef.current = null;\n    };\n  }, [config, createMarkerClusterGroup]);\n  useEffect(() => {\n    if (mapRef.current && markersRef.current) {\n      console.log('Updating markers after dependency change');\n      updateMarkers();\n\n      // Добавляем обработчик события закрытия попапа\n      const popupCloseHandler = () => {\n        // Обрабатываем только если закрытие не программное\n        if (!isProgrammaticClose.current) {\n          if (activeMarkerRef.current) {\n            // Только если закрытие инициировано пользователем\n            activeMarkerRef.current.setIcon(createDefaultIcon());\n            activeMarkerRef.current = null;\n\n            // Сообщаем, что попап закрыт пользователем\n            if (onPopupClose) {\n              onPopupClose();\n            }\n          }\n        }\n        // Сбрасываем флаг после использования\n        isProgrammaticClose.current = false;\n      };\n\n      // Удаляем старый обработчик, если он есть, и добавляем новый\n      mapRef.current.off('popupclose');\n      mapRef.current.on('popupclose', popupCloseHandler);\n      return () => {\n        if (mapRef.current) {\n          mapRef.current.off('popupclose', popupCloseHandler);\n        }\n      };\n    }\n  }, [updateMarkers, createDefaultIcon, onPopupClose]);\n\n  // Обрабатываем изменение selectedPlace\n  useEffect(() => {\n    var _markersRef$current3;\n    if (!mapRef.current || !selectedPlace) return;\n\n    // Пытаемся найти маркер для выбранного места\n    const allLayers = ((_markersRef$current3 = markersRef.current) === null || _markersRef$current3 === void 0 ? void 0 : _markersRef$current3.getLayers()) || [];\n    const allMarkers = allLayers;\n\n    // Маркер не найден, обновляем все маркеры\n    if (allMarkers.length === 0) {\n      updateMarkers();\n      return;\n    }\n\n    // Центрируем карту на выбранном месте если selectedPlace изменился\n    const currentZoom = mapRef.current.getZoom();\n    const targetZoom = currentZoom >= 16 ? currentZoom : 16;\n    mapRef.current.setView([selectedPlace.lat, selectedPlace.lng], targetZoom, {\n      animate: true,\n      duration: 0.5\n    });\n  }, [selectedPlace, updateMarkers]);\n\n  // Отслеживаем изменения границ карты\n  useEffect(() => {\n    if (!mapRef.current) return;\n    const handleMove = () => {\n      if (!mapRef.current) return;\n      const bounds = mapRef.current.getBounds();\n      if (bounds && onBoundsChangeRef.current) {\n        onBoundsChangeRef.current(bounds);\n      }\n    };\n    mapRef.current.on('moveend', handleMove);\n    mapRef.current.on('zoomend', handleMove);\n\n    // Вызываем handleMove только при первом рендере\n    if (!isInitialBoundsSet.current) {\n      window.setTimeout(() => {\n        if (mapRef.current) {\n          isInitialBoundsSet.current = true; // Устанавливаем флаг до вызова handleMove\n          handleMove();\n        }\n      }, 200);\n    }\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.off('moveend', handleMove);\n        mapRef.current.off('zoomend', handleMove);\n      }\n    };\n  }, [mapRef]); // Убираем onBoundsChange из зависимостей\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    className: \"map-wrapper\",\n    center: config.mapSettings.center,\n    zoom: config.mapSettings.initialZoom,\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    zoomControl: false,\n    attributionControl: false,\n    touchZoom: true,\n    tap: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 568,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"gRF0I/zf61wQ7VDDSHx2u3isSac=\");\n_c2 = Map;\nexport default Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapContainer\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","L","styled","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapContainer","div","_c","createPopupContent","place","image","name","description","instagram","maps_url","Map","places","config","onMarkerClick","selectedPlace","mapRef","onPopupClose","onBoundsChange","_s","markersRef","activeMarkerRef","containerRef","mobilePopupRef","isProgrammaticClose","isInitialBoundsSet","onBoundsChangeRef","current","popupDiv","document","createElement","className","body","appendChild","removeChild","showMobilePopup","popupContent","innerHTML","classList","add","closeBtn","querySelector","addEventListener","remove","setIcon","createDefaultIcon","console","log","divIcon","iconSize","iconAnchor","html","createCustomIcon","popupAnchor","createMarkerClusterGroup","mapSettings","clusterSettings","markerClusterGroup","iconCreateFunction","cluster","count","getChildCount","point","disableClusteringAtZoom","spiderfyOnMaxZoom","maxClusterRadius","zoomToBoundsOnClick","showCoverageOnHover","animate","animateAddingMarkers","updateMarkers","clearLayers","defaultIcon","customIcon","markers","forEach","_markersRef$current","marker","lat","lng","icon","riseOnHover","riseOffset","window","innerWidth","popup","maxWidth","closeButton","closeOnClick","autoPan","autoPanPadding","setContent","bindPopup","bindTooltip","permanent","direction","offset","opacity","on","_mapRef$current","_mapRef$current2","closePopup","currentZoom","getZoom","targetZoom","setView","getLatLng","duration","openPopup","push","addLayer","shouldShowLabel","visibleMarkers","_mapRef$current3","length","markerPoint","latLngToContainerPoint","minDistance","otherMarker","_mapRef$current4","otherPoint","distance","distanceTo","_mapRef$current5","_mapRef$current6","center","getCenter","centerPoint","distToCenter","otherDistToCenter","updateLabelsVisibility","zoom","allMarkers","tooltip","getTooltip","setOpacity","_markersRef$current2","parent","getVisibleParent","includes","e","layer","childMarkers","getAllChildMarkers","fire","_mapRef$current7","setTimeout","map","initialZoom","scrollWheelZoom","closePopupOnClick","tap","attributionControl","zoomControl","maxZoom","minZoom","bounceAtZoomLimits","inertia","tileLayer","url","attribution","subdomains","preferCanvas","addTo","control","position","prefix","preventDefaultTouchMoveOnMap","target","closest","preventDefault","passive","handleResize","invalidateSize","pan","removeEventListener","popupCloseHandler","off","_markersRef$current3","allLayers","getLayers","handleMove","bounds","getBounds","style","height","width","touchZoom","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/borvel/Documents/GitHub/places-app/src/components/Map/Map.tsx"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { Place, AppConfig } from '../../types/places';\nimport { styled } from 'styled-components';\n\n// Fix for default icon\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\ninterface MapProps {\n  places: Place[];\n  config: AppConfig;\n  onMarkerClick: (place: Place) => void;\n  selectedPlace?: Place | null;\n  mapRef: React.MutableRefObject<L.Map | null>;\n  onPopupClose?: () => void;\n  onBoundsChange?: (bounds: L.LatLngBounds) => void;\n}\n\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  will-change: transform;\n  transform: translateZ(0);\n  backface-visibility: hidden;\n  perspective: 1000px;\n`;\n\n// Расширяем интерфейс MapOptions для поддержки дополнительных свойств\ndeclare module 'leaflet' {\n  interface MapOptions {\n    tap?: boolean;\n  }\n\n  interface TileLayerOptions {\n    preferCanvas?: boolean;\n  }\n}\n\nconst createPopupContent = (place: Place) => `\n  <div class=\"place-card\">\n    <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" style=\"width: 100%; height: 200px; object-fit: cover;\" />\n    <div class=\"place-content\" style=\"padding: 15px;\">\n      <h3 style=\"margin: 0; font-size: 18px;\">${place.name}</h3>\n      <p style=\"margin: 10px 0; font-size: 14px;\">${place.description}</p>\n      <div class=\"place-links-social\" style=\"margin-top: 10px;\">\n        ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n        ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" style=\"width: 27px; height: 27px;\" /></a>` : ''}\n      </div>\n    </div>\n  </div>\n`;\n\nexport const Map: React.FC<MapProps> = ({ places, config, onMarkerClick, selectedPlace, mapRef, onPopupClose, onBoundsChange }) => {\n  const markersRef = useRef<L.MarkerClusterGroup | null>(null);\n  const activeMarkerRef = useRef<L.Marker | null>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const mobilePopupRef = useRef<HTMLDivElement | null>(null);\n  // Флаг для отслеживания программного закрытия попапа\n  const isProgrammaticClose = useRef(false);\n  // Флаг для отслеживания первой установки границ\n  const isInitialBoundsSet = useRef(false);\n  // Храним ссылку на функцию обратного вызова на верхнем уровне\n  const onBoundsChangeRef = useRef(onBoundsChange);\n\n  // Обновляем ссылку при изменении функции\n  useEffect(() => {\n    onBoundsChangeRef.current = onBoundsChange;\n  }, [onBoundsChange]);\n\n  // Создаем мобильный попап\n  useEffect(() => {\n    if (!mobilePopupRef.current) {\n      const popupDiv = document.createElement('div');\n      popupDiv.className = 'map-popup-mobile';\n      document.body.appendChild(popupDiv);\n      mobilePopupRef.current = popupDiv;\n\n      return () => {\n        document.body.removeChild(popupDiv);\n        mobilePopupRef.current = null;\n      };\n    }\n  }, []);\n\n  const showMobilePopup = useCallback((place: Place) => {\n    if (!mobilePopupRef.current) return;\n\n    const popupContent = `\n      <div class=\"place-card\">\n        <img src=\"${place.image}\" alt=\"${place.name}\" class=\"place-image\" />\n        <div class=\"place-content\">\n          <h3>${place.name}</h3>\n          <p>${place.description}</p>\n          <div class=\"place-links-social\">\n            ${place.instagram ? `<a href=\"${place.instagram}\" target=\"_blank\"><img src=\"/data/images/instagram.svg\" alt=\"Instagram\" /></a>` : ''}\n            ${place.maps_url ? `<a href=\"${place.maps_url}\" target=\"_blank\"><img src=\"/data/images/google.svg\" alt=\"Google Maps\" /></a>` : ''}\n          </div>\n        </div>\n        <button class=\"close-btn-mobile\">×</button>\n      </div>\n    `;\n\n    mobilePopupRef.current.innerHTML = popupContent;\n    mobilePopupRef.current.classList.add('active');\n\n    const closeBtn = mobilePopupRef.current.querySelector('.close-btn-mobile');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => {\n        if (mobilePopupRef.current) {\n          mobilePopupRef.current.classList.remove('active');\n          if (activeMarkerRef.current) {\n            activeMarkerRef.current.setIcon(createDefaultIcon());\n            activeMarkerRef.current = null;\n          }\n\n          // Сообщаем, что попап закрыт, чтобы сбросить selectedPlace\n          if (onPopupClose) {\n            onPopupClose();\n          }\n        }\n      });\n    }\n  }, [onPopupClose]);\n\n  const createDefaultIcon = useCallback(() => {\n    console.log('Creating default icon');\n    return L.divIcon({\n      className: 'marker-default',\n      iconSize: [30, 30],\n      iconAnchor: [15, 15],\n      html: '<div></div>'\n    });\n  }, []);\n\n  const createCustomIcon = useCallback(() => {\n    console.log('Creating custom icon');\n    return L.divIcon({\n      className: 'marker-active',\n      iconSize: [30, 40],\n      iconAnchor: [15, 40],\n      popupAnchor: [0, -40],\n      html: '<div></div>'\n    });\n  }, []);\n\n  const createMarkerClusterGroup = useCallback(() => {\n    console.log('Creating marker cluster group with settings:', config.mapSettings.clusterSettings);\n    return L.markerClusterGroup({\n      iconCreateFunction: (cluster: L.MarkerCluster) => {\n        const count = cluster.getChildCount();\n        return L.divIcon({\n          html: `<div class=\"cluster-icon\">${count}</div>`,\n          className: 'marker-cluster',\n          iconSize: L.point(40, 40)\n        });\n      },\n      disableClusteringAtZoom: config.mapSettings.clusterSettings.disableClusteringAtZoom,\n      spiderfyOnMaxZoom: false,\n      maxClusterRadius: config.mapSettings.clusterSettings.maxClusterRadius,\n      zoomToBoundsOnClick: false,\n      showCoverageOnHover: false,\n      animate: true,\n      animateAddingMarkers: false\n    });\n  }, [config.mapSettings.clusterSettings]);\n\n  const updateMarkers = useCallback(() => {\n    console.log('Updating markers');\n    if (!mapRef.current || !markersRef.current) return;\n\n    // Очищаем все слои, включая предыдущие маркеры\n    markersRef.current.clearLayers();\n\n    // Сбрасываем активный маркер\n    activeMarkerRef.current = null;\n\n    const defaultIcon = createDefaultIcon();\n    const customIcon = createCustomIcon();\n\n    // Создаем маркеры с tooltips\n    const markers: L.Marker[] = [];\n    places.forEach(place => {\n      const marker = L.marker([place.lat, place.lng], {\n        icon: defaultIcon,\n        riseOnHover: true,\n        riseOffset: 250\n      });\n\n      if (window.innerWidth > 768) {\n        const popup = L.popup({\n          maxWidth: 500,\n          className: 'place-popup',\n          closeButton: true,\n          closeOnClick: false,\n          autoPan: true,\n          autoPanPadding: [50, 50]\n        }).setContent(createPopupContent(place));\n\n        marker.bindPopup(popup);\n      }\n\n      // Создаем tooltip и делаем его невидимым по умолчанию\n      marker.bindTooltip(place.name, {\n        permanent: true,\n        direction: 'bottom',\n        offset: [0, 5],\n        className: 'place-label',\n        opacity: 0\n      });\n\n      // Добавляем место в данные маркера для доступа в дальнейшем\n      (marker as any).place = place;\n\n      marker.on('click', () => {\n        console.log('Marker clicked:', place.name);\n\n        // При клике на тот же маркер, отменяем выбор\n        if (activeMarkerRef.current === marker) {\n          marker.setIcon(defaultIcon);\n          if (window.innerWidth > 768) {\n            isProgrammaticClose.current = true;\n            marker.closePopup();\n          }\n          activeMarkerRef.current = null;\n          onMarkerClick(place); // Передаем повторный клик для отмены выбора\n          return;\n        }\n\n        // При клике на другой маркер\n        if (activeMarkerRef.current && activeMarkerRef.current !== marker) {\n          activeMarkerRef.current.setIcon(defaultIcon);\n          if (window.innerWidth > 768) {\n            isProgrammaticClose.current = true;\n            activeMarkerRef.current.closePopup();\n          }\n        }\n\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n\n        // Центрируем карту с проверкой зума\n        const currentZoom = mapRef.current?.getZoom() || 0;\n        const targetZoom = currentZoom >= 16 ? currentZoom : 16;\n\n        mapRef.current?.setView(marker.getLatLng(), targetZoom, {\n          animate: true,\n          duration: 0.5\n        });\n\n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n\n        onMarkerClick(place);\n      });\n\n      markers.push(marker);\n      markersRef.current?.addLayer(marker);\n\n      // Устанавливаем активный маркер для выбранного места\n      if (selectedPlace && selectedPlace.name === place.name) {\n        console.log('Setting active marker for selected place:', place.name);\n        marker.setIcon(customIcon);\n        activeMarkerRef.current = marker;\n\n        if (window.innerWidth > 768) {\n          marker.openPopup();\n        } else {\n          showMobilePopup(place);\n        }\n      }\n    });\n\n    // Функция для проверки наложения меток\n    const shouldShowLabel = (marker: L.Marker, visibleMarkers: L.Marker[]): boolean => {\n      // Одиночные метки всегда показываем\n      if (visibleMarkers.length <= 1) return true;\n\n      const markerPoint = mapRef.current?.latLngToContainerPoint(marker.getLatLng());\n      if (!markerPoint) return false;\n\n      // Минимальное расстояние между метками в пикселях\n      const minDistance = 100;\n\n      // Проверяем расстояние до других видимых меток\n      for (const otherMarker of visibleMarkers) {\n        if (marker === otherMarker) continue;\n\n        const otherPoint = mapRef.current?.latLngToContainerPoint(otherMarker.getLatLng());\n        if (!otherPoint) continue;\n\n        const distance = markerPoint.distanceTo(otherPoint);\n        if (distance < minDistance) {\n          // Если метки слишком близко, показываем только ту, что ближе к центру экрана\n          const center = mapRef.current?.getCenter();\n          if (!center) continue;\n\n          const centerPoint = mapRef.current?.latLngToContainerPoint(center);\n          if (!centerPoint) continue;\n\n          const distToCenter = markerPoint.distanceTo(centerPoint);\n          const otherDistToCenter = otherPoint.distanceTo(centerPoint);\n\n          // Если эта метка дальше от центра, скрываем её\n          if (distToCenter > otherDistToCenter) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    };\n\n    // Обновляем видимость названий меток при изменении зума или видимых маркеров\n    const updateLabelsVisibility = () => {\n      if (!mapRef.current || !markersRef.current) return;\n\n      const zoom = mapRef.current.getZoom();\n      const allMarkers = markers;\n\n      // Для небольшого зума скрываем все названия\n      if (zoom < 14) {\n        allMarkers.forEach(marker => {\n          const tooltip = marker.getTooltip();\n          if (tooltip) tooltip.setOpacity(0);\n        });\n        return;\n      }\n\n      // Получаем все маркеры, которые видны на экране (не в кластерах)\n      const visibleMarkers: L.Marker[] = [];\n      allMarkers.forEach(marker => {\n        // Проверяем, является ли родитель маркера кластером\n        const parent = markersRef.current?.getVisibleParent(marker);\n        if (parent === marker) {\n          visibleMarkers.push(marker);\n        }\n      });\n\n      // Обновляем видимость для каждого видимого маркера\n      visibleMarkers.forEach(marker => {\n        const tooltip = marker.getTooltip();\n        if (!tooltip) return;\n\n        if (shouldShowLabel(marker, visibleMarkers)) {\n          tooltip.setOpacity(1);\n        } else {\n          tooltip.setOpacity(0);\n        }\n      });\n\n      // Скрываем названия для маркеров в кластерах\n      allMarkers.forEach(marker => {\n        if (!visibleMarkers.includes(marker)) {\n          const tooltip = marker.getTooltip();\n          if (tooltip) tooltip.setOpacity(0);\n        }\n      });\n    };\n\n    // Добавляем обработчик клика на кластер\n    markersRef.current.on('clusterclick', (e: L.LeafletEvent) => {\n      const cluster = e.layer as L.MarkerCluster;\n      const childMarkers = cluster.getAllChildMarkers();\n\n      if (childMarkers.length === 1) {\n        childMarkers[0].fire('click');\n      } else {\n        mapRef.current?.setView(cluster.getLatLng(), 16, { animate: true });\n      }\n\n      // Обновляем видимость названий после раскрытия кластера\n      setTimeout(updateLabelsVisibility, 300);\n    });\n\n    // События, при которых нужно обновлять видимость названий\n    mapRef.current.on('zoomend', updateLabelsVisibility);\n    mapRef.current.on('moveend', updateLabelsVisibility);\n    markersRef.current.on('animationend', updateLabelsVisibility);\n\n    // Обновляем сразу после создания маркеров\n    setTimeout(updateLabelsVisibility, 100);\n  }, [places, selectedPlace, createDefaultIcon, createCustomIcon, onMarkerClick, showMobilePopup]);\n\n  useEffect(() => {\n    console.log('Initializing map');\n    if (!containerRef.current || mapRef.current) return;\n\n    const map = L.map(containerRef.current, {\n      center: config.mapSettings.center,\n      zoom: config.mapSettings.initialZoom,\n      scrollWheelZoom: true,\n      closePopupOnClick: true,\n      tap: false,\n      attributionControl: false,\n      zoomControl: false,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2,\n      bounceAtZoomLimits: false,\n      inertia: false\n    });\n\n    L.tileLayer(config.mapSettings.tileLayer.url, {\n      attribution: config.mapSettings.tileLayer.attribution,\n      subdomains: config.mapSettings.tileLayer.subdomains,\n      maxZoom: config.mapSettings.maxZoom,\n      minZoom: config.mapSettings.initialZoom - 2,\n      preferCanvas: true\n    }).addTo(map);\n\n    L.control.attribution({\n      position: 'bottomright',\n      prefix: false\n    }).addTo(map);\n\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(map);\n\n    mapRef.current = map;\n    markersRef.current = createMarkerClusterGroup();\n    map.addLayer(markersRef.current);\n\n    // Добавляем глобальный обработчик touchmove для предотвращения скроллинга страницы\n    // при взаимодействии с картой\n    const preventDefaultTouchMoveOnMap = (e: TouchEvent) => {\n      if (e.target && \n         (e.target as HTMLElement).closest('.leaflet-container')) {\n        e.preventDefault();\n      }\n    };\n\n    // Добавляем обработчик на уровне документа с passive: false,\n    // чтобы иметь возможность вызывать preventDefault()\n    document.addEventListener('touchmove', preventDefaultTouchMoveOnMap, { passive: false });\n\n    const handleResize = () => {\n      console.log('Window resized, updating map size');\n      map.invalidateSize({ animate: false, pan: false });\n    };\n\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('orientationchange', handleResize);\n\n    // Используем явный window.setTimeout для избежания проблем с асинхронностью\n    window.setTimeout(handleResize, 100);\n\n    return () => {\n      console.log('Cleaning up map');\n      document.removeEventListener('touchmove', preventDefaultTouchMoveOnMap);\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('orientationchange', handleResize);\n      map.remove();\n      mapRef.current = null;\n      markersRef.current = null;\n    };\n  }, [config, createMarkerClusterGroup]);\n\n  useEffect(() => {\n    if (mapRef.current && markersRef.current) {\n      console.log('Updating markers after dependency change');\n      updateMarkers();\n\n      // Добавляем обработчик события закрытия попапа\n      const popupCloseHandler = () => {\n        // Обрабатываем только если закрытие не программное\n        if (!isProgrammaticClose.current) {\n          if (activeMarkerRef.current) {\n            // Только если закрытие инициировано пользователем\n            activeMarkerRef.current.setIcon(createDefaultIcon());\n            activeMarkerRef.current = null;\n\n            // Сообщаем, что попап закрыт пользователем\n            if (onPopupClose) {\n              onPopupClose();\n            }\n          }\n        }\n        // Сбрасываем флаг после использования\n        isProgrammaticClose.current = false;\n      };\n\n      // Удаляем старый обработчик, если он есть, и добавляем новый\n      mapRef.current.off('popupclose');\n      mapRef.current.on('popupclose', popupCloseHandler);\n\n      return () => {\n        if (mapRef.current) {\n          mapRef.current.off('popupclose', popupCloseHandler);\n        }\n      };\n    }\n  }, [updateMarkers, createDefaultIcon, onPopupClose]);\n\n  // Обрабатываем изменение selectedPlace\n  useEffect(() => {\n    if (!mapRef.current || !selectedPlace) return;\n\n    // Пытаемся найти маркер для выбранного места\n    const allLayers = markersRef.current?.getLayers() || [];\n    const allMarkers = allLayers as L.Marker[];\n\n    // Маркер не найден, обновляем все маркеры\n    if (allMarkers.length === 0) {\n      updateMarkers();\n      return;\n    }\n\n    // Центрируем карту на выбранном месте если selectedPlace изменился\n    const currentZoom = mapRef.current.getZoom();\n    const targetZoom = currentZoom >= 16 ? currentZoom : 16;\n\n    mapRef.current.setView([selectedPlace.lat, selectedPlace.lng], targetZoom, {\n      animate: true,\n      duration: 0.5\n    });\n  }, [selectedPlace, updateMarkers]);\n\n  // Отслеживаем изменения границ карты\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    const handleMove = () => {\n      if (!mapRef.current) return;\n      const bounds = mapRef.current.getBounds();\n      if (bounds && onBoundsChangeRef.current) {\n        onBoundsChangeRef.current(bounds);\n      }\n    };\n\n    mapRef.current.on('moveend', handleMove);\n    mapRef.current.on('zoomend', handleMove);\n\n    // Вызываем handleMove только при первом рендере\n    if (!isInitialBoundsSet.current) {\n      window.setTimeout(() => {\n        if (mapRef.current) {\n          isInitialBoundsSet.current = true; // Устанавливаем флаг до вызова handleMove\n          handleMove();\n        }\n      }, 200);\n    }\n\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.off('moveend', handleMove);\n        mapRef.current.off('zoomend', handleMove);\n      }\n    };\n  }, [mapRef]); // Убираем onBoundsChange из зависимостей\n\n  return (\n    <MapContainer \n      className=\"map-wrapper\"\n      center={config.mapSettings.center} \n      zoom={config.mapSettings.initialZoom} \n      style={{height: '100%', width: '100%'}}\n      zoomControl={false}\n      attributionControl={false}\n      touchZoom={true}\n      tap={false}\n    >\n    </MapContainer>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}