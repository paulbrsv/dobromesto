{"ast":null,"code":"var _jsxFileName = \"/Users/borvel/Documents/GitHub/places-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { Header } from './components/Header/Header';\nimport { Map } from './components/Map/Map';\nimport { PlacesList } from './components/PlacesList/PlacesList';\nimport { Filters } from './components/Filters/Filters';\nimport { useUrlFilters } from './hooks/useUrlFilters';\nimport { styled } from 'styled-components';\nimport L from 'leaflet';\nimport { createGlobalStyle } from 'styled-components';\n\n// Глобальные стили для фиксов маркеров Leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n  .leaflet-marker-icon,\n  .leaflet-marker-shadow,\n  .leaflet-control {\n    will-change: transform;\n    transform: translateZ(0);\n    backface-visibility: hidden;\n    perspective: 1000px;\n  }\n\n  .marker-default div {\n    background-color: #3388ff;\n    border-radius: 50%;\n    width: 12px;\n    height: 12px;\n    border: 2px solid #fff;\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);\n  }\n\n  .marker-active div {\n    background-image: url('/data/images/mark.svg');\n    background-size: cover;\n    width: 30px;\n    height: 40px;\n    background-repeat: no-repeat;\n    background-position: center;\n  }\n\n  .leaflet-popup-content-wrapper {\n    border-radius: 4px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    width: 500px;\n  }\n\n  .leaflet-popup-content {\n    margin: 0;\n    max-width: 500px !important;\n    width: 500px !important;\n    border-radius: 8px;\n  }\n\n  /* Фикс для attribution */\n  .leaflet-control-attribution {\n    position: fixed !important;\n    bottom: 0 !important;\n    right: 0 !important;\n    z-index: 1000 !important;\n    background: rgba(255, 255, 255, 0.7);\n    padding: 5px;\n    font-size: 10px;\n    text-align: right;\n  }\n  \n  /* Стили для подписей маркеров */\n  .leaflet-tooltip.place-label {\n    background-color: transparent;\n    border: none;\n    box-shadow: none;\n    font-size: 10px;\n    font-weight: bold;\n    color: #4d4d4d;\n    padding: 0;\n  }\n  \n  /* Убираем стрелку и остатки фона у подписей */\n  .leaflet-tooltip.place-label::before {\n    display: none !important;\n  }\n`;\n_c = GlobalStyle;\nconst AppContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = AppContainer;\nconst Main = styled.main`\n  margin: 56px 0 0;\n  min-height: calc(100vh - 56px);\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n`;\n_c3 = Main;\nconst Content = styled.div`\n  position: relative;\n  flex: 1;\n  min-height: 0;\n  padding: 0;\n  display: flex;\n`;\n_c4 = Content;\nconst ShowListButton = styled.button`\n  position: absolute;\n  top: 30px;\n  right: 50px;\n  padding: 10px 18px;\n  background: ${props => {\n  var _props$theme$colors;\n  return ((_props$theme$colors = props.theme.colors) === null || _props$theme$colors === void 0 ? void 0 : _props$theme$colors.primary) || '#333';\n}};\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  z-index: 20;\n  display: none;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n\n  &:hover {\n    background: ${props => {\n  var _props$theme$colors2;\n  return ((_props$theme$colors2 = props.theme.colors) === null || _props$theme$colors2 === void 0 ? void 0 : _props$theme$colors2.hover) || '#555';\n}};\n  }\n`;\n_c5 = ShowListButton;\nconst NearbyButton = styled.button`\n  position: fixed;\n  font-size: 18px;\n  bottom: 50px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 15px 30px;\n  background: #FF7F50;\n  color: white;\n  border: 0;\n  border-radius: 50px;\n  z-index: 9;\n  cursor: pointer;\n  font-weight: bold;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n  display: none;\n  transition: opacity 0.3s ease, visibility 0.3s ease;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n_c6 = NearbyButton;\nconst LoaderOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n  flex-direction: column;\n`;\n_c7 = LoaderOverlay;\nconst LoaderText = styled.div`\n  font-size: 18px;\n  margin-top: 15px;\n  color: ${props => {\n  var _props$theme$colors3;\n  return ((_props$theme$colors3 = props.theme.colors) === null || _props$theme$colors3 === void 0 ? void 0 : _props$theme$colors3.primary) || '#333';\n}};\n`;\n_c8 = LoaderText;\nconst LoaderSpinner = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid ${props => {\n  var _props$theme$colors4;\n  return ((_props$theme$colors4 = props.theme.colors) === null || _props$theme$colors4 === void 0 ? void 0 : _props$theme$colors4.primary) || '#333';\n}};\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 2s linear infinite;\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n_c9 = LoaderSpinner;\nconst App = () => {\n  _s();\n  var _config$content;\n  const [config, setConfig] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [isListVisible, setIsListVisible] = useState(window.innerWidth > 768);\n  const [isLoading, setIsLoading] = useState(false);\n  const mapRef = useRef(null);\n  const userMarkerRef = useRef(null);\n  const [mapBounds, setMapBounds] = useState(null);\n\n  // Вычисляем отфильтрованные места с помощью useMemo\n  const filteredPlaces = useMemo(() => {\n    if (!places || activeFilters.length === 0) return places;\n\n    // Применяем каждый фильтр последовательно (AND логика)\n    return activeFilters.reduce((filteredList, currentFilter) => {\n      return filteredList.filter(place => place.attributes.includes(currentFilter));\n    }, places);\n  }, [places, activeFilters]);\n\n  // Сортируем места - сначала те, что в области видимости карты\n  const sortedPlaces = useMemo(() => {\n    if (!filteredPlaces || !mapBounds) return filteredPlaces;\n    return [...filteredPlaces].sort((a, b) => {\n      // Проверяем, находится ли место в границах карты\n      const aInBounds = mapBounds.contains(L.latLng(a.lat, a.lng));\n      const bInBounds = mapBounds.contains(L.latLng(b.lat, b.lng));\n      if (aInBounds && !bInBounds) return -1; // 'a' в границах, 'b' - нет, 'a' должно быть первым\n      if (!aInBounds && bInBounds) return 1; // 'b' в границах, 'a' - нет, 'b' должно быть первым\n      return 0; // оба в границах или оба за границами - порядок не меняется\n    });\n  }, [filteredPlaces, mapBounds]);\n\n  // Вычисляем количество мест для каждого фильтра с учетом последовательной фильтрации\n  const filterCounts = useMemo(() => {\n    if (!places || !places.length) return {};\n\n    // Получаем отфильтрованные места на основе активных фильтров\n    let filteredPlacesForCounts = [...places];\n\n    // Применяем каждый активный фильтр последовательно\n    activeFilters.forEach(filter => {\n      filteredPlacesForCounts = filteredPlacesForCounts.filter(place => place.attributes.includes(filter));\n    });\n\n    // Собираем все доступные атрибуты для подсчета\n    const allAttributes = new Set();\n    places.forEach(place => {\n      place.attributes.forEach(attr => allAttributes.add(attr));\n    });\n\n    // Считаем количество мест для каждого атрибута\n    const counts = {};\n    allAttributes.forEach(attr => {\n      // Если атрибут уже в активных фильтрах, подсчитываем его на основе текущей выборки\n      if (activeFilters.includes(attr)) {\n        counts[attr] = filteredPlacesForCounts.length;\n      } else {\n        // Для остальных атрибутов проверяем, сколько мест останется, если их добавить\n        counts[attr] = filteredPlacesForCounts.filter(place => place.attributes.includes(attr)).length;\n      }\n    });\n    return counts;\n  }, [places, activeFilters]);\n\n  // Загружаем конфигурацию и данные\n  useEffect(() => {\n    // Устанавливаем флаг загрузки\n    setIsLoading(true);\n    fetch('/data/config.json').then(response => response.json()).then(configData => {\n      setConfig(configData);\n\n      // Загружаем данные о местах\n      return fetch('/data/places.json');\n    }).then(response => response.json()).then(placesData => {\n      setPlaces(placesData);\n      // Устанавливаем места в глобальной переменной для работы фильтров\n      window.places = placesData;\n\n      // Завершаем загрузку\n      setIsLoading(false);\n    }).catch(error => {\n      console.error('Error loading data:', error);\n      // В случае ошибки тоже завершаем загрузку\n      setIsLoading(false);\n    });\n  }, []);\n\n  // Обработка изменения размера окна\n  useEffect(() => {\n    const handleResize = () => {\n      setIsListVisible(window.innerWidth > 768);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Обработчик изменения фильтров\n  const handleFilterChange = useCallback(newFilters => {\n    console.log('📍 Изменение фильтров:', newFilters);\n    setActiveFilters(newFilters);\n  }, []);\n\n  // Получаем функции для работы с фильтрами\n  const {\n    toggleFilter,\n    isFilterAvailable,\n    resetFilters\n  } = useUrlFilters(activeFilters, handleFilterChange, filterCounts);\n\n  // Обработчик сброса фильтров\n  const handleReset = useCallback(() => {\n    resetFilters();\n    setSelectedPlace(null); // Сбрасываем выбранное место\n  }, [resetFilters]);\n  const handlePlaceSelect = useCallback(place => {\n    // Если выбрали то же место, которое уже выбрано, то сбрасываем выбор\n    if (selectedPlace && selectedPlace.name === place.name) {\n      setSelectedPlace(null);\n    } else {\n      // Иначе устанавливаем новое выбранное место\n      setSelectedPlace(place);\n    }\n\n    // Скрываем список мест на мобильных устройствах\n    if (window.innerWidth <= 768) {\n      setIsListVisible(false);\n    }\n  }, [mapRef, selectedPlace]);\n  const handleShowNearby = useCallback(() => {\n    // Геолокация только для мобильных устройств\n    if (window.innerWidth > 768) return;\n\n    // Начинаем загрузку\n    setIsLoading(true);\n\n    // Запрашиваем геолокацию\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by your browser');\n      setIsLoading(false);\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(position => {\n      const userLat = position.coords.latitude;\n      const userLng = position.coords.longitude;\n\n      // Центрируем карту по координатам пользователя\n      if (mapRef.current) {\n        // Сбрасываем выбранное место при использовании геолокации\n        setSelectedPlace(null);\n        mapRef.current.setView([userLat, userLng], 16, {\n          animate: true,\n          duration: 0.5\n        });\n\n        // Удаляем предыдущий маркер пользователя\n        if (userMarkerRef.current) {\n          userMarkerRef.current.remove();\n          userMarkerRef.current = null;\n        }\n\n        // Создаем новый маркер пользователя\n        const userMarker = L.marker([userLat, userLng], {\n          icon: L.icon({\n            iconUrl: '/data/images/pin.svg',\n            iconSize: [30, 40],\n            iconAnchor: [15, 40]\n          })\n        }).addTo(mapRef.current);\n\n        // Сохраняем ссылку на маркер пользователя\n        userMarkerRef.current = userMarker;\n      }\n\n      // Завершаем загрузку\n      setIsLoading(false);\n    }, error => {\n      console.error('Error getting location:', error);\n      alert('Unable to get your location');\n      setIsLoading(false);\n    });\n  }, [mapRef]);\n  const handlePopupClose = useCallback(() => {\n    // При закрытии попапа через крестик сбрасываем выбранное место\n    setSelectedPlace(null);\n  }, [mapRef]);\n\n  // Обработчик изменения границ карты\n  const handleBoundsChange = useCallback(bounds => {\n    setMapBounds(bounds);\n  }, []);\n  if (!config) return null;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: config.styleSettings,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        config: config\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        children: [/*#__PURE__*/_jsxDEV(Filters, {\n          config: config,\n          activeFilters: activeFilters,\n          onFilterChange: handleFilterChange,\n          filterCounts: filterCounts,\n          toggleFilter: toggleFilter,\n          isFilterAvailable: isFilterAvailable,\n          resetFilters: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          children: [/*#__PURE__*/_jsxDEV(Map, {\n            places: filteredPlaces,\n            config: config,\n            onMarkerClick: handlePlaceSelect,\n            selectedPlace: selectedPlace,\n            mapRef: mapRef,\n            onPopupClose: handlePopupClose,\n            onBoundsChange: handleBoundsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), isListVisible && /*#__PURE__*/_jsxDEV(PlacesList, {\n            config: config,\n            places: sortedPlaces,\n            onPlaceSelect: handlePlaceSelect,\n            selectedPlace: selectedPlace,\n            isVisible: isListVisible,\n            onClose: () => setIsListVisible(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ShowListButton, {\n            onClick: () => setIsListVisible(true),\n            children: config.content.buttonLabels.showList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NearbyButton, {\n            onClick: handleShowNearby,\n            children: isLoading ? 'Loading...' : config.content.buttonLabels.showNearby\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(LoaderOverlay, {\n            children: [/*#__PURE__*/_jsxDEV(LoaderSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LoaderText, {\n              children: (config === null || config === void 0 ? void 0 : (_config$content = config.content) === null || _config$content === void 0 ? void 0 : _config$content.loadingText) || 'Loading...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 410,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Judezpv8kbBkX2WiwtZvfHXUQcg=\", false, function () {\n  return [useUrlFilters];\n});\n_c10 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"Main\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"ShowListButton\");\n$RefreshReg$(_c6, \"NearbyButton\");\n$RefreshReg$(_c7, \"LoaderOverlay\");\n$RefreshReg$(_c8, \"LoaderText\");\n$RefreshReg$(_c9, \"LoaderSpinner\");\n$RefreshReg$(_c10, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useRef","ThemeProvider","Header","Map","PlacesList","Filters","useUrlFilters","styled","L","createGlobalStyle","jsxDEV","_jsxDEV","GlobalStyle","_c","AppContainer","div","_c2","Main","main","_c3","Content","_c4","ShowListButton","button","props","_props$theme$colors","theme","colors","primary","_props$theme$colors2","hover","_c5","NearbyButton","_c6","LoaderOverlay","_c7","LoaderText","_props$theme$colors3","_c8","LoaderSpinner","_props$theme$colors4","_c9","App","_s","_config$content","config","setConfig","places","setPlaces","activeFilters","setActiveFilters","selectedPlace","setSelectedPlace","isListVisible","setIsListVisible","window","innerWidth","isLoading","setIsLoading","mapRef","userMarkerRef","mapBounds","setMapBounds","filteredPlaces","length","reduce","filteredList","currentFilter","filter","place","attributes","includes","sortedPlaces","sort","a","b","aInBounds","contains","latLng","lat","lng","bInBounds","filterCounts","filteredPlacesForCounts","forEach","allAttributes","Set","attr","add","counts","fetch","then","response","json","configData","placesData","catch","error","console","handleResize","addEventListener","removeEventListener","handleFilterChange","newFilters","log","toggleFilter","isFilterAvailable","resetFilters","handleReset","handlePlaceSelect","name","handleShowNearby","navigator","geolocation","alert","getCurrentPosition","position","userLat","coords","latitude","userLng","longitude","current","setView","animate","duration","remove","userMarker","marker","icon","iconUrl","iconSize","iconAnchor","addTo","handlePopupClose","handleBoundsChange","bounds","styleSettings","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","onMarkerClick","onPopupClose","onBoundsChange","onPlaceSelect","isVisible","onClose","onClick","content","buttonLabels","showList","showNearby","loadingText","_c10","$RefreshReg$"],"sources":["/Users/borvel/Documents/GitHub/places-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { Header } from './components/Header/Header';\nimport { Map } from './components/Map/Map';\nimport { PlacesList } from './components/PlacesList/PlacesList';\nimport { Filters } from './components/Filters/Filters';\nimport { Place, AppConfig } from './types/places';\nimport { useUrlFilters } from './hooks/useUrlFilters';\nimport { styled } from 'styled-components';\nimport L from 'leaflet';\nimport { createGlobalStyle } from 'styled-components';\n\n// Глобальные стили для фиксов маркеров Leaflet\nconst GlobalStyle = createGlobalStyle`\n  .leaflet-marker-icon,\n  .leaflet-marker-shadow,\n  .leaflet-control {\n    will-change: transform;\n    transform: translateZ(0);\n    backface-visibility: hidden;\n    perspective: 1000px;\n  }\n\n  .marker-default div {\n    background-color: #3388ff;\n    border-radius: 50%;\n    width: 12px;\n    height: 12px;\n    border: 2px solid #fff;\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);\n  }\n\n  .marker-active div {\n    background-image: url('/data/images/mark.svg');\n    background-size: cover;\n    width: 30px;\n    height: 40px;\n    background-repeat: no-repeat;\n    background-position: center;\n  }\n\n  .leaflet-popup-content-wrapper {\n    border-radius: 4px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    width: 500px;\n  }\n\n  .leaflet-popup-content {\n    margin: 0;\n    max-width: 500px !important;\n    width: 500px !important;\n    border-radius: 8px;\n  }\n\n  /* Фикс для attribution */\n  .leaflet-control-attribution {\n    position: fixed !important;\n    bottom: 0 !important;\n    right: 0 !important;\n    z-index: 1000 !important;\n    background: rgba(255, 255, 255, 0.7);\n    padding: 5px;\n    font-size: 10px;\n    text-align: right;\n  }\n  \n  /* Стили для подписей маркеров */\n  .leaflet-tooltip.place-label {\n    background-color: transparent;\n    border: none;\n    box-shadow: none;\n    font-size: 10px;\n    font-weight: bold;\n    color: #4d4d4d;\n    padding: 0;\n  }\n  \n  /* Убираем стрелку и остатки фона у подписей */\n  .leaflet-tooltip.place-label::before {\n    display: none !important;\n  }\n`;\n\nconst AppContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Main = styled.main`\n  margin: 56px 0 0;\n  min-height: calc(100vh - 56px);\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n`;\n\nconst Content = styled.div`\n  position: relative;\n  flex: 1;\n  min-height: 0;\n  padding: 0;\n  display: flex;\n`;\n\nconst ShowListButton = styled.button`\n  position: absolute;\n  top: 30px;\n  right: 50px;\n  padding: 10px 18px;\n  background: ${props => props.theme.colors?.primary || '#333'};\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  z-index: 20;\n  display: none;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n\n  &:hover {\n    background: ${props => props.theme.colors?.hover || '#555'};\n  }\n`;\n\nconst NearbyButton = styled.button`\n  position: fixed;\n  font-size: 18px;\n  bottom: 50px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 15px 30px;\n  background: #FF7F50;\n  color: white;\n  border: 0;\n  border-radius: 50px;\n  z-index: 9;\n  cursor: pointer;\n  font-weight: bold;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n  display: none;\n  transition: opacity 0.3s ease, visibility 0.3s ease;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n\nconst LoaderOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n  flex-direction: column;\n`;\n\nconst LoaderText = styled.div`\n  font-size: 18px;\n  margin-top: 15px;\n  color: ${props => props.theme.colors?.primary || '#333'};\n`;\n\nconst LoaderSpinner = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid ${props => props.theme.colors?.primary || '#333'};\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 2s linear infinite;\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst App: React.FC = () => {\n  const [config, setConfig] = useState<AppConfig | null>(null);\n  const [places, setPlaces] = useState<Place[]>([]);\n  const [activeFilters, setActiveFilters] = useState<string[]>([]);\n  const [selectedPlace, setSelectedPlace] = useState<Place | null>(null);\n  const [isListVisible, setIsListVisible] = useState(window.innerWidth > 768);\n  const [isLoading, setIsLoading] = useState(false);\n  const mapRef = useRef<L.Map | null>(null);\n  const userMarkerRef = useRef<L.Marker | null>(null);\n  const [mapBounds, setMapBounds] = useState<L.LatLngBounds | null>(null);\n\n  // Вычисляем отфильтрованные места с помощью useMemo\n  const filteredPlaces = useMemo(() => {\n    if (!places || activeFilters.length === 0) return places;\n\n    // Применяем каждый фильтр последовательно (AND логика)\n    return activeFilters.reduce((filteredList, currentFilter) => {\n      return filteredList.filter(place => \n        place.attributes.includes(currentFilter)\n      );\n    }, places);\n  }, [places, activeFilters]);\n\n  // Сортируем места - сначала те, что в области видимости карты\n  const sortedPlaces = useMemo(() => {\n    if (!filteredPlaces || !mapBounds) return filteredPlaces;\n\n    return [...filteredPlaces].sort((a, b) => {\n      // Проверяем, находится ли место в границах карты\n      const aInBounds = mapBounds.contains(L.latLng(a.lat, a.lng));\n      const bInBounds = mapBounds.contains(L.latLng(b.lat, b.lng));\n\n      if (aInBounds && !bInBounds) return -1; // 'a' в границах, 'b' - нет, 'a' должно быть первым\n      if (!aInBounds && bInBounds) return 1;  // 'b' в границах, 'a' - нет, 'b' должно быть первым\n      return 0; // оба в границах или оба за границами - порядок не меняется\n    });\n  }, [filteredPlaces, mapBounds]);\n\n  // Вычисляем количество мест для каждого фильтра с учетом последовательной фильтрации\n  const filterCounts = useMemo(() => {\n    if (!places || !places.length) return {};\n\n    // Получаем отфильтрованные места на основе активных фильтров\n    let filteredPlacesForCounts = [...places];\n    \n    // Применяем каждый активный фильтр последовательно\n    activeFilters.forEach(filter => {\n      filteredPlacesForCounts = filteredPlacesForCounts.filter(place => \n        place.attributes.includes(filter)\n      );\n    });\n\n    // Собираем все доступные атрибуты для подсчета\n    const allAttributes = new Set<string>();\n    places.forEach(place => {\n      place.attributes.forEach(attr => allAttributes.add(attr));\n    });\n\n    // Считаем количество мест для каждого атрибута\n    const counts: Record<string, number> = {};\n    \n    allAttributes.forEach(attr => {\n      // Если атрибут уже в активных фильтрах, подсчитываем его на основе текущей выборки\n      if (activeFilters.includes(attr)) {\n        counts[attr] = filteredPlacesForCounts.length;\n      } else {\n        // Для остальных атрибутов проверяем, сколько мест останется, если их добавить\n        counts[attr] = filteredPlacesForCounts.filter(place => \n          place.attributes.includes(attr)\n        ).length;\n      }\n    });\n\n    return counts;\n  }, [places, activeFilters]);\n\n  // Загружаем конфигурацию и данные\n  useEffect(() => {\n    // Устанавливаем флаг загрузки\n    setIsLoading(true);\n    \n    fetch('/data/config.json')\n      .then(response => response.json())\n      .then(configData => {\n        setConfig(configData);\n\n        // Загружаем данные о местах\n        return fetch('/data/places.json');\n      })\n      .then(response => response.json())\n      .then(placesData => {\n        setPlaces(placesData);\n        // Устанавливаем места в глобальной переменной для работы фильтров\n        window.places = placesData;\n        \n        // Завершаем загрузку\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error('Error loading data:', error);\n        // В случае ошибки тоже завершаем загрузку\n        setIsLoading(false);\n      });\n  }, []);\n\n  // Обработка изменения размера окна\n  useEffect(() => {\n    const handleResize = () => {\n      setIsListVisible(window.innerWidth > 768);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Обработчик изменения фильтров\n  const handleFilterChange = useCallback((newFilters: string[]) => {\n    console.log('📍 Изменение фильтров:', newFilters);\n    setActiveFilters(newFilters);\n  }, []);\n\n  // Получаем функции для работы с фильтрами\n  const { toggleFilter, isFilterAvailable, resetFilters } = useUrlFilters(\n    activeFilters,\n    handleFilterChange,\n    filterCounts\n  );\n\n  // Обработчик сброса фильтров\n  const handleReset = useCallback(() => {\n    resetFilters();\n    setSelectedPlace(null); // Сбрасываем выбранное место\n  }, [resetFilters]);\n\n  const handlePlaceSelect = useCallback((place: Place) => {\n\n\n    // Если выбрали то же место, которое уже выбрано, то сбрасываем выбор\n    if (selectedPlace && selectedPlace.name === place.name) {\n      setSelectedPlace(null);\n    } else {\n      // Иначе устанавливаем новое выбранное место\n      setSelectedPlace(place);\n    }\n\n    // Скрываем список мест на мобильных устройствах\n    if (window.innerWidth <= 768) {\n      setIsListVisible(false);\n    }\n  }, [mapRef, selectedPlace]);\n\n  const handleShowNearby = useCallback(() => {\n    // Геолокация только для мобильных устройств\n    if (window.innerWidth > 768) return;\n\n    // Начинаем загрузку\n    setIsLoading(true);\n\n    // Запрашиваем геолокацию\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by your browser');\n      setIsLoading(false);\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        const userLat = position.coords.latitude;\n        const userLng = position.coords.longitude;\n\n        // Центрируем карту по координатам пользователя\n        if (mapRef.current) {\n          // Сбрасываем выбранное место при использовании геолокации\n          setSelectedPlace(null);\n\n          mapRef.current.setView([userLat, userLng], 16, {\n            animate: true,\n            duration: 0.5\n          });\n\n          // Удаляем предыдущий маркер пользователя\n          if (userMarkerRef.current) {\n            userMarkerRef.current.remove();\n            userMarkerRef.current = null;\n          }\n\n          // Создаем новый маркер пользователя\n          const userMarker = L.marker([userLat, userLng], {\n            icon: L.icon({\n              iconUrl: '/data/images/pin.svg',\n              iconSize: [30, 40],\n              iconAnchor: [15, 40]\n            })\n          }).addTo(mapRef.current);\n\n          // Сохраняем ссылку на маркер пользователя\n          userMarkerRef.current = userMarker;\n        }\n\n        // Завершаем загрузку\n        setIsLoading(false);\n      },\n      error => {\n        console.error('Error getting location:', error);\n        alert('Unable to get your location');\n        setIsLoading(false);\n      }\n    );\n  }, [mapRef]);\n\n  const handlePopupClose = useCallback(() => {\n    // При закрытии попапа через крестик сбрасываем выбранное место\n    setSelectedPlace(null);\n\n\n  }, [mapRef]);\n\n  // Обработчик изменения границ карты\n  const handleBoundsChange = useCallback((bounds: L.LatLngBounds) => {\n    setMapBounds(bounds);\n  }, []);\n\n  if (!config) return null;\n\n  return (\n    <ThemeProvider theme={config.styleSettings}>\n      <GlobalStyle />\n      <AppContainer>\n        <Header config={config} />\n        <Main>\n          <Filters\n            config={config}\n            activeFilters={activeFilters}\n            onFilterChange={handleFilterChange}\n            filterCounts={filterCounts}\n            toggleFilter={toggleFilter}\n            isFilterAvailable={isFilterAvailable}\n            resetFilters={handleReset}\n          />\n          <Content>\n            <Map\n              places={filteredPlaces}\n              config={config}\n              onMarkerClick={handlePlaceSelect}\n              selectedPlace={selectedPlace}\n              mapRef={mapRef}\n              onPopupClose={handlePopupClose}\n              onBoundsChange={handleBoundsChange}\n            />\n            {isListVisible && (\n              <PlacesList\n                config={config}\n                places={sortedPlaces}\n                onPlaceSelect={handlePlaceSelect}\n                selectedPlace={selectedPlace}\n                isVisible={isListVisible}\n                onClose={() => setIsListVisible(false)}\n              />\n            )}\n            <ShowListButton onClick={() => setIsListVisible(true)}>\n              {config.content.buttonLabels.showList}\n            </ShowListButton>\n            <NearbyButton onClick={handleShowNearby}>\n              {isLoading ? 'Loading...' : config.content.buttonLabels.showNearby}\n            </NearbyButton>\n            \n            {/* Оверлей лоадера */}\n            {isLoading && (\n              <LoaderOverlay>\n                <LoaderSpinner />\n                <LoaderText>\n                  {config?.content?.loadingText || 'Loading...'}\n                </LoaderText>\n              </LoaderOverlay>\n            )}\n          </Content>\n        </Main>\n      </AppContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}